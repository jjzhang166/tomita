#pragma once
#include <library/lemmer/alpha/abc.h>
using NLemmer::NDetail::TTr;
using NLemmer::TDiacriticsMap;

const TChar APOST_AND_HYPH[] = { 0x27, 0x2019, 0x2d, 0 };
const TChar STRESS[] = { 0x301, 0 };
const TChar STRESS_BULGARIAN[] = { 0x300, 0 };
const TChar CIRCUMFLEX[] = { 0x302, 0 };
const TChar TAPOSTROPHECONVERTER_AUX_FROM[] = { 0x2019, 0 };
const TChar TAPOSTROPHECONVERTER_AUX_TO[] = { 0x27, 0 };
struct TApostropheConverter: public TTr {
    TApostropheConverter()
        : TTr(TAPOSTROPHECONVERTER_AUX_FROM, TAPOSTROPHECONVERTER_AUX_TO, NULL, NULL, NULL)
    {}
};
const TChar TDEFAULTPRECONVERTER_AUX_FROM[] = { 0x181, 0x1e04, 0x2c00, 0x408, 0x1f0a, 0x20c, 0x2cac, 0x191, 0x1e14, 0x116, 0x2c18, 0x1f1a, 0x39d, 0x21c, 0x51e, 0x24bc, 0x1e5a, 0x1e24, 0x2126, 0x2c28, 0x10c0, 0x106, 0x22c, 0x1b1, 0x1e34, 0x136, 0x10bb, 0x1f3a, 0x53e, 0x4c3, 0xa644, 0x160, 0x41a, 0xcb, 0x1f4a, 0x24c, 0xa65c, 0x54e, 0x1d1, 0x50, 0x1f39, 0x1e62, 0xa654, 0x156, 0xdb, 0xa75a, 0xa780, 0x1e64, 0x2c10, 0x468, 0x1f6a, 0x1e4c, 0x2cbc, 0x1f1, 0x372, 0x1e74, 0x176, 0x478, 0x3fd, 0x2c03, 0x1e6a, 0x1e84, 0x186, 0x2c88, 0x1f8a, 0x1f6c, 0x2c13, 0x392, 0x1e94, 0x418, 0x2c98, 0x2c6e, 0x158, 0x2cc4, 0x10a0, 0x423, 0xff25, 0x1ea4, 0x1a6, 0x2ca8, 0x1f8b, 0x1faa, 0x24c1, 0x10b0, 0x1e72, 0xff35, 0x1eb4, 0x24b6, 0x10c5, 0x4b8, 0x10b2, 0x1fba, 0x141, 0xc0, 0x1ec4, 0x420, 0x549, 0x2cc8, 0x4b, 0x1fca, 0x2ccc, 0xd0, 0x411, 0xa722, 0x1ed4, 0x2cd8, 0x1fda, 0x2161, 0x2c63, 0x3e2, 0x1ee4, 0x1e6, 0x4e8, 0x126, 0xa66c, 0x1ef4, 0x428, 0x498, 0x4f8, 0x2c7e, 0x10ab, 0xa726, 0x4d4, 0x401, 0xff2a, 0x508, 0x18b, 0x1e0a, 0x1f8f, 0x40e, 0x110, 0x1e82, 0x4a2, 0x24c5, 0x518, 0x1e1a, 0x1f9f, 0x2c1e, 0x10a1, 0x120, 0x222, 0xa724, 0x3a7, 0x1e2a, 0x1faf, 0x2c2e, 0x10b1, 0x2c09, 0x232, 0xff34, 0x24b9, 0x538, 0x415, 0x1e3a, 0x10c1, 0xa68a, 0xa744, 0x46, 0x4c9, 0x548, 0x1cb, 0x1e4a, 0x38c, 0xd1, 0x150, 0xa754, 0x56, 0x1db, 0xa65a, 0xa664, 0x2160, 0xa73a, 0x216c, 0xa764, 0x2c70, 0xa66a, 0x46e, 0x170, 0xa692, 0xa77d, 0x3f7, 0x1e7a, 0x47e, 0xa784, 0x409, 0x15e, 0x1e8a, 0x24c3, 0x1f0f, 0x48e, 0x190, 0xa742, 0x2c19, 0x39c, 0x2c9e, 0x1a0, 0x10a6, 0x429, 0x212b, 0x1eaa, 0xff2f, 0x4ae, 0x533, 0x10b6, 0x13b, 0x49e, 0x23d, 0x24cb, 0x1f3f, 0x4be, 0x41, 0x2c21, 0x543, 0xa74a, 0xc6, 0x1eca, 0x24ce, 0x51, 0x553, 0x1ea2, 0x2cae, 0xa640, 0xd6, 0x1eda, 0x3dc, 0x1f5f, 0x4de, 0x1e0, 0x419, 0x4f2, 0x2c69, 0x216b, 0x1eea, 0x3ec, 0x1f6f, 0x4fc, 0x1e80, 0x2c29, 0xa752, 0x2c7f, 0x17b, 0x1efa, 0x4fe, 0x200, 0x1f2f, 0x102, 0x404, 0x1f89, 0x1e08, 0x556, 0x1f0e, 0x391, 0x210, 0x402, 0x2c08, 0x2c14, 0x1f99, 0x1e18, 0x51a, 0x19d, 0x3a1, 0x220, 0x122, 0x2c24, 0x10a7, 0x1fa9, 0x1e28, 0x206, 0xa72e, 0x230, 0x132, 0x10b7, 0x1fb9, 0x1e38, 0x53a, 0x2cb2, 0x24bf, 0xa73e, 0x1e02, 0x40a, 0xc7, 0x2c60, 0x1fc9, 0x1e48, 0x54a, 0x1cd, 0x4c, 0x24cf, 0xa74e, 0x152, 0x1fd9, 0x1e58, 0x20e, 0xa75e, 0x162, 0x464, 0x1fe9, 0xa668, 0x166, 0xa76e, 0x172, 0xa72c, 0x376, 0x1ff9, 0x1e78, 0x2cbe, 0xa77e, 0x426, 0x182, 0x2c84, 0x386, 0x1f09, 0xa688, 0x1f28, 0x216, 0x2c0f, 0x1f8e, 0x10c4, 0x494, 0x396, 0x1f19, 0x16e, 0x41f, 0x1f9e, 0x1a2, 0x2ca4, 0x3a6, 0xff29, 0x1ea8, 0x24c6, 0x10ac, 0x42f, 0x1fae, 0x1b2, 0x535, 0x4b4, 0xff39, 0x1eb8, 0x23b, 0x1e1e, 0x13d, 0x10bc, 0x545, 0x24c4, 0x47, 0x1f49, 0x1ec8, 0xcc, 0x422, 0x555, 0x2cd4, 0x57, 0x1f59, 0x1ed8, 0x2cce, 0xdc, 0x1e2, 0x4e4, 0x3e6, 0x1f69, 0x1ee8, 0x1e26, 0x216d, 0x2c6f, 0x1f2, 0x4f4, 0xff28, 0xa779, 0x1ef8, 0x17d, 0x2cb4, 0x42a, 0x504, 0x187, 0x2c80, 0x1f08, 0x4d6, 0x10c, 0x1e0e, 0x514, 0x197, 0x4ee, 0x1f18, 0x39b, 0x2c1a, 0x11c, 0xa684, 0x524, 0x1a7, 0x226, 0xa728, 0x3ab, 0x2c2a, 0x10ad, 0x12c, 0x407, 0x1e2e, 0x534, 0x1b7, 0x1e90, 0xff38, 0x2cde, 0x10bd, 0x40b, 0x1e3e, 0x42, 0x4c5, 0x544, 0x1c7, 0x246, 0xa748, 0xcd, 0x14c, 0x1e4e, 0x52, 0xa686, 0x554, 0x1d7, 0xa738, 0xa758, 0xdd, 0x15c, 0x2cc2, 0x1e5e, 0x2cb6, 0x403, 0x2c90, 0x1f68, 0x46a, 0x413, 0x1e6e, 0x370, 0x1f7, 0x1e8, 0x47a, 0x2c0c, 0xa694, 0x2c05, 0xa734, 0x1f88, 0x2c8a, 0xa68e, 0x2c15, 0x1fea, 0x1f98, 0x49a, 0x2c1b, 0x1e9e, 0x3a0, 0xff23, 0x1f9a, 0x425, 0x1fa8, 0xa646, 0x1ac, 0x4b6, 0x1eae, 0xff33, 0x1ef2, 0x1f48, 0x1fb8, 0x4ba, 0x1bc, 0x53f, 0x1ebe, 0x241, 0xc2, 0x147, 0x4a0, 0x19c, 0x1fc8, 0x1e42, 0x24ca, 0x4d, 0x2cba, 0x54f, 0x1ece, 0xd2, 0x1fd8, 0x2cda, 0x1ede, 0x3e0, 0xc3, 0x2167, 0x16c, 0x1fe8, 0x4ea, 0x1ec, 0x1eee, 0x2c75, 0x4a8, 0x1ff8, 0x4fa, 0x42b, 0x1efe, 0x400, 0x1e7e, 0x204, 0x506, 0x189, 0xff2d, 0xa656, 0x1f8d, 0x1e0c, 0x10e, 0x410, 0x502, 0x395, 0x214, 0x516, 0x1f9d, 0x1e1c, 0x2c04, 0x2c20, 0x10a3, 0xff22, 0x3a5, 0x224, 0x2cb0, 0x1a9, 0x1fad, 0x1e2c, 0x12e, 0x1f4b, 0x4a6, 0x10b3, 0xa732, 0x24be, 0x536, 0x24bb, 0xa65e, 0x1e3c, 0x40f, 0x2168, 0x10c3, 0x50a, 0x244, 0x546, 0x50e, 0x48, 0x4cb, 0xa64c, 0x40c, 0x539, 0xd3, 0xa76a, 0x24b8, 0x1d9, 0x58, 0x1e5c, 0x2164, 0x460, 0xa762, 0x2ceb, 0xa666, 0x1e6c, 0x216e, 0x470, 0x112, 0x1e30, 0xa650, 0xa768, 0x1e7c, 0x10c2, 0x414, 0x480, 0xa782, 0x2166, 0x2cc0, 0x2c0b, 0x38a, 0x1f0d, 0x1e8c, 0x18e, 0x490, 0x3a4, 0x2c8e, 0x41b, 0x39a, 0x1f1d, 0x2ca0, 0xff2b, 0x10a8, 0x2c2b, 0x3aa, 0x1f2d, 0x1eac, 0x1ae, 0x531, 0x4b0, 0x472, 0x24c8, 0x139, 0x10b8, 0x1f3d, 0x1ebc, 0x541, 0x24c0, 0x43, 0x24cd, 0xc8, 0x1f4d, 0x1ecc, 0x551, 0x2cd0, 0x53, 0xd8, 0x3da, 0x41c, 0x1edc, 0x1de, 0x4e0, 0x496, 0x4d0, 0x2169, 0x2c6b, 0x3ea, 0x1f6d, 0x1eec, 0x1ee, 0x4f0, 0x179, 0x3fa, 0x2c92, 0x1efc, 0x1fe, 0x500, 0x24e, 0x12a, 0x406, 0x108, 0x20a, 0x1f0c, 0x38f, 0x2c2c, 0x510, 0x193, 0x1e12, 0x4d8, 0x118, 0x21a, 0x1f1c, 0x39f, 0x184, 0x520, 0x2cdc, 0x1e22, 0x2c26, 0x10a9, 0x128, 0x22a, 0xff24, 0x1f2c, 0x512, 0x1b3, 0x2132, 0x10b9, 0x23a, 0x1f3c, 0x4c1, 0x540, 0x48a, 0x2ce0, 0xc9, 0x40d, 0x24a, 0x1f4c, 0x3cf, 0x4e, 0x550, 0x1d3, 0xa652, 0xd9, 0xff2e, 0x1e8e, 0xa75c, 0x196, 0xa662, 0x466, 0x168, 0x42d, 0xa76c, 0x492, 0x476, 0x178, 0x1f3e, 0x3ff, 0x2c01, 0xa682, 0x2c86, 0x1f8c, 0x2c11, 0x1e92, 0x394, 0x2c96, 0x198, 0x2c62, 0x1f9c, 0x421, 0xff32, 0x2c9a, 0x24c7, 0xff27, 0x2ca6, 0x2c1d, 0x1fac, 0x10ae, 0x1eb2, 0xff37, 0xa648, 0x1b8, 0x53b, 0x1fec, 0x1fbc, 0x10be, 0x143, 0x1ec2, 0x245, 0x2cc6, 0x49, 0x1c8, 0x54b, 0x1f6, 0x1fcc, 0xce, 0x1ed2, 0x2cd6, 0x59, 0x2c25, 0xde, 0x2163, 0x1ee2, 0x3e4, 0x4e6, 0xff36, 0x424, 0x552, 0x3f4, 0x4f6, 0x1f8, 0x1ffc, 0x2c06, 0x1e00, 0x2caa, 0x100, 0x389, 0x208, 0x10a, 0x2183, 0x1e10, 0x202, 0xa658, 0x399, 0x218, 0x11a, 0x2c1c, 0x1e54, 0x1e20, 0x522, 0xff26, 0x3a9, 0x228, 0x212a, 0x42c, 0x10af, 0xff3a, 0x532, 0x1b5, 0x24b7, 0xa736, 0x10a2, 0x10bf, 0x1e40, 0x1f2a, 0x542, 0x1c5, 0x44, 0x4c7, 0xa746, 0x248, 0x14a, 0xcf, 0x1e50, 0x2c23, 0x2162, 0x1d5, 0x54, 0xa756, 0x1f2e, 0x15a, 0x2c64, 0x1e60, 0x24ba, 0xa766, 0x2c0a, 0x16a, 0x46c, 0x1e70, 0x212, 0x1e68, 0x3f9, 0x47c, 0xa680, 0x216a, 0x397, 0x2c07, 0xa786, 0x2c16, 0x2c8c, 0x38e, 0xa690, 0x24c2, 0x417, 0x405, 0x1f6e, 0x2c9c, 0x39e, 0xff21, 0x1ea0, 0x10a4, 0x427, 0x4ac, 0xff31, 0x1eb0, 0x1f38, 0x10b4, 0x1ffa, 0x41e, 0x53d, 0x4bc, 0x474, 0x1ec0, 0x243, 0x2cca, 0x145, 0xc4, 0x1ca, 0x54d, 0x24cc, 0x4f, 0x1ed0, 0xd4, 0x4dc, 0x3de, 0x1ee0, 0x2165, 0x2c67, 0x14e, 0x1ea, 0x4ec, 0xa68c, 0x3ee, 0x1ef0, 0x4d2, 0x1fa, 0x1e88, 0x3fe, 0x2c02, 0x1eba, 0x104, 0x1e06, 0x11e, 0xa78b, 0x50c, 0x18f, 0xff2c, 0x393, 0x412, 0x114, 0x1e16, 0x1f9b, 0x42e, 0x51c, 0x19f, 0x21e, 0x3a3, 0x2c22, 0x10a5, 0x124, 0x130, 0x1fab, 0x1af, 0x22e, 0xff30, 0x1e32, 0x10b5, 0x134, 0x1e36, 0x1fbb, 0x24bd, 0x53c, 0x23e, 0xa740, 0x18a, 0xc5, 0x1e46, 0x1fcb, 0x4a, 0x4cd, 0x54c, 0x1cf, 0x48c, 0xa750, 0x2ce2, 0xd5, 0x154, 0x1e56, 0x1fdb, 0x5a, 0x1e4, 0xa760, 0x462, 0x164, 0x1e66, 0x1feb, 0x2ced, 0xa73c, 0x2c72, 0x1f5d, 0x174, 0x1e76, 0x2cb8, 0x1ffb, 0x2c94, 0xc1, 0x2c82, 0x2c17, 0x1e86, 0x388, 0x1f0b, 0x2c0d, 0x2c0e, 0xa642, 0x194, 0xa696, 0x398, 0x1f1b, 0x41d, 0x2ca2, 0x1a4, 0x1ea6, 0x3a8, 0x1f2b, 0x10aa, 0x2c2d, 0x49c, 0x24c9, 0x4b2, 0x2c1f, 0x537, 0x1eb6, 0x1f3b, 0x10ba, 0x13f, 0xa64a, 0x45, 0x1c4, 0x547, 0x1ec6, 0x4c0, 0xca, 0x4da, 0xa74c, 0xa72a, 0x2cd2, 0x55, 0x1ed6, 0x3d8, 0x1f5b, 0xda, 0x1e44, 0x4a4, 0x416, 0xa64e, 0x4e2, 0x2c27, 0x1ee6, 0x3e8, 0x1f6b, 0x2c6d, 0x4aa, 0x216f, 0x1fc, 0x1f29, 0x1e52, 0x1f4, 0x1ef6, 0x2c12, 0xa77b, 0 };
const TChar TDEFAULTPRECONVERTER_AUX_TO[] = { 0x253, 0x1e05, 0x2c30, 0x458, 0x1f02, 0x20d, 0x2cad, 0x192, 0x1e15, 0x117, 0x2c48, 0x1f12, 0x3bd, 0x21d, 0x51f, 0x24d6, 0x1e5b, 0x1e25, 0x3c9, 0x2c58, 0x2d20, 0x107, 0x22d, 0x28a, 0x1e35, 0x137, 0x2d1b, 0x1f32, 0x56e, 0x4c4, 0xa645, 0x161, 0x43a, 0xeb, 0x1f42, 0x24d, 0xa65d, 0x57e, 0x1d2, 0x70, 0x1f31, 0x1e63, 0xa655, 0x157, 0xfb, 0xa75b, 0xa781, 0x1e65, 0x2c40, 0x469, 0x1f62, 0x1e4d, 0x2cbd, 0x1f3, 0x373, 0x1e75, 0x177, 0x479, 0x37b, 0x2c33, 0x1e6b, 0x1e85, 0x254, 0x2c89, 0x1f82, 0x1f64, 0x2c43, 0x3b2, 0x1e95, 0x438, 0x2c99, 0x271, 0x159, 0x2cc5, 0x2d00, 0x443, 0xff45, 0x1ea5, 0x280, 0x2ca9, 0x1f83, 0x1fa2, 0x24db, 0x2d10, 0x1e73, 0xff55, 0x1eb5, 0x24d0, 0x2d25, 0x4b9, 0x2d12, 0x1f70, 0x142, 0xe0, 0x1ec5, 0x440, 0x579, 0x2cc9, 0x6b, 0x1f74, 0x2ccd, 0xf0, 0x431, 0xa723, 0x1ed5, 0x2cd9, 0x1f76, 0x2171, 0x1d7d, 0x3e3, 0x1ee5, 0x1e7, 0x4e9, 0x127, 0xa66d, 0x1ef5, 0x448, 0x499, 0x4f9, 0x23f, 0x2d0b, 0xa727, 0x4d5, 0x451, 0xff4a, 0x509, 0x18c, 0x1e0b, 0x1f87, 0x45e, 0x111, 0x1e83, 0x4a3, 0x24df, 0x519, 0x1e1b, 0x1f97, 0x2c4e, 0x2d01, 0x121, 0x223, 0xa725, 0x3c7, 0x1e2b, 0x1fa7, 0x2c5e, 0x2d11, 0x2c39, 0x233, 0xff54, 0x24d3, 0x568, 0x435, 0x1e3b, 0x2d21, 0xa68b, 0xa745, 0x66, 0x4ca, 0x578, 0x1cc, 0x1e4b, 0x3cc, 0xf1, 0x151, 0xa755, 0x76, 0x1dc, 0xa65b, 0xa665, 0x2170, 0xa73b, 0x217c, 0xa765, 0x252, 0xa66b, 0x46f, 0x171, 0xa693, 0x1d79, 0x3f8, 0x1e7b, 0x47f, 0xa785, 0x459, 0x15f, 0x1e8b, 0x24dd, 0x1f07, 0x48f, 0x25b, 0xa743, 0x2c49, 0x3bc, 0x2c9f, 0x1a1, 0x2d06, 0x449, 0xe5, 0x1eab, 0xff4f, 0x4af, 0x563, 0x2d16, 0x13c, 0x49f, 0x19a, 0x24e5, 0x1f37, 0x4bf, 0x61, 0x2c51, 0x573, 0xa74b, 0xe6, 0x1ecb, 0x24e8, 0x71, 0x583, 0x1ea3, 0x2caf, 0xa641, 0xf6, 0x1edb, 0x3dd, 0x1f57, 0x4df, 0x1e1, 0x439, 0x4f3, 0x2c6a, 0x217b, 0x1eeb, 0x3ed, 0x1f67, 0x4fd, 0x1e81, 0x2c59, 0xa753, 0x240, 0x17c, 0x1efb, 0x4ff, 0x201, 0x1f27, 0x103, 0x454, 0x1f81, 0x1e09, 0x586, 0x1f06, 0x3b1, 0x211, 0x452, 0x2c38, 0x2c44, 0x1f91, 0x1e19, 0x51b, 0x272, 0x3c1, 0x19e, 0x123, 0x2c54, 0x2d07, 0x1fa1, 0x1e29, 0x207, 0xa72f, 0x231, 0x133, 0x2d17, 0x1fb1, 0x1e39, 0x56a, 0x2cb3, 0x24d9, 0xa73f, 0x1e03, 0x45a, 0xe7, 0x2c61, 0x1f73, 0x1e49, 0x57a, 0x1ce, 0x6c, 0x24e9, 0xa74f, 0x153, 0x1fd1, 0x1e59, 0x20f, 0xa75f, 0x163, 0x465, 0x1fe1, 0xa669, 0x167, 0xa76f, 0x173, 0xa72d, 0x377, 0x1f79, 0x1e79, 0x2cbf, 0xa77f, 0x446, 0x183, 0x2c85, 0x3ac, 0x1f01, 0xa689, 0x1f20, 0x217, 0x2c3f, 0x1f86, 0x2d24, 0x495, 0x3b6, 0x1f11, 0x16f, 0x43f, 0x1f96, 0x1a3, 0x2ca5, 0x3c6, 0xff49, 0x1ea9, 0x24e0, 0x2d0c, 0x44f, 0x1fa6, 0x28b, 0x565, 0x4b5, 0xff59, 0x1eb9, 0x23c, 0x1e1f, 0x13e, 0x2d1c, 0x575, 0x24de, 0x67, 0x1f41, 0x1ec9, 0xec, 0x442, 0x585, 0x2cd5, 0x77, 0x1f51, 0x1ed9, 0x2ccf, 0xfc, 0x1e3, 0x4e5, 0x3e7, 0x1f61, 0x1ee9, 0x1e27, 0x217d, 0x250, 0x1f3, 0x4f5, 0xff48, 0xa77a, 0x1ef9, 0x17e, 0x2cb5, 0x44a, 0x505, 0x188, 0x2c81, 0x1f00, 0x4d7, 0x10d, 0x1e0f, 0x515, 0x268, 0x4ef, 0x1f10, 0x3bb, 0x2c4a, 0x11d, 0xa685, 0x525, 0x1a8, 0x227, 0xa729, 0x3cb, 0x2c5a, 0x2d0d, 0x12d, 0x457, 0x1e2f, 0x564, 0x292, 0x1e91, 0xff58, 0x2cdf, 0x2d1d, 0x45b, 0x1e3f, 0x62, 0x4c6, 0x574, 0x1c9, 0x247, 0xa749, 0xed, 0x14d, 0x1e4f, 0x72, 0xa687, 0x584, 0x1d8, 0xa739, 0xa759, 0xfd, 0x15d, 0x2cc3, 0x1e5f, 0x2cb7, 0x453, 0x2c91, 0x1f60, 0x46b, 0x433, 0x1e6f, 0x371, 0x1bf, 0x1e9, 0x47b, 0x2c3c, 0xa695, 0x2c35, 0xa735, 0x1f80, 0x2c8b, 0xa68f, 0x2c45, 0x1f7a, 0x1f90, 0x49b, 0x2c4b, 0xdf, 0x3c0, 0xff43, 0x1f92, 0x445, 0x1fa0, 0xa647, 0x1ad, 0x4b7, 0x1eaf, 0xff53, 0x1ef3, 0x1f40, 0x1fb0, 0x4bb, 0x1bd, 0x56f, 0x1ebf, 0x242, 0xe2, 0x148, 0x4a1, 0x26f, 0x1f72, 0x1e43, 0x24e4, 0x6d, 0x2cbb, 0x57f, 0x1ecf, 0xf2, 0x1fd0, 0x2cdb, 0x1edf, 0x3e1, 0xe3, 0x2177, 0x16d, 0x1fe0, 0x4eb, 0x1ed, 0x1eef, 0x2c76, 0x4a9, 0x1f78, 0x4fb, 0x44b, 0x1eff, 0x450, 0x1e7f, 0x205, 0x507, 0x256, 0xff4d, 0xa657, 0x1f85, 0x1e0d, 0x10f, 0x430, 0x503, 0x3b5, 0x215, 0x517, 0x1f95, 0x1e1d, 0x2c34, 0x2c50, 0x2d03, 0xff42, 0x3c5, 0x225, 0x2cb1, 0x283, 0x1fa5, 0x1e2d, 0x12f, 0x1f43, 0x4a7, 0x2d13, 0xa733, 0x24d8, 0x566, 0x24d5, 0xa65f, 0x1e3d, 0x45f, 0x2178, 0x2d23, 0x50b, 0x289, 0x576, 0x50f, 0x68, 0x4cc, 0xa64d, 0x45c, 0x569, 0xf3, 0xa76b, 0x24d2, 0x1da, 0x78, 0x1e5d, 0x2174, 0x461, 0xa763, 0x2cec, 0xa667, 0x1e6d, 0x217e, 0x471, 0x113, 0x1e31, 0xa651, 0xa769, 0x1e7d, 0x2d22, 0x434, 0x481, 0xa783, 0x2176, 0x2cc1, 0x2c3b, 0x3af, 0x1f05, 0x1e8d, 0x1dd, 0x491, 0x3c4, 0x2c8f, 0x43b, 0x3ba, 0x1f15, 0x2ca1, 0xff4b, 0x2d08, 0x2c5b, 0x3ca, 0x1f25, 0x1ead, 0x288, 0x561, 0x4b1, 0x473, 0x24e2, 0x13a, 0x2d18, 0x1f35, 0x1ebd, 0x571, 0x24da, 0x63, 0x24e7, 0xe8, 0x1f45, 0x1ecd, 0x581, 0x2cd1, 0x73, 0xf8, 0x3db, 0x43c, 0x1edd, 0x1df, 0x4e1, 0x497, 0x4d1, 0x2179, 0x2c6c, 0x3eb, 0x1f65, 0x1eed, 0x1ef, 0x4f1, 0x17a, 0x3fb, 0x2c93, 0x1efd, 0x1ff, 0x501, 0x24f, 0x12b, 0x456, 0x109, 0x20b, 0x1f04, 0x3ce, 0x2c5c, 0x511, 0x260, 0x1e13, 0x4d9, 0x119, 0x21b, 0x1f14, 0x3bf, 0x185, 0x521, 0x2cdd, 0x1e23, 0x2c56, 0x2d09, 0x129, 0x22b, 0xff44, 0x1f24, 0x513, 0x1b4, 0x214e, 0x2d19, 0x2c65, 0x1f34, 0x4c2, 0x570, 0x48b, 0x2ce1, 0xe9, 0x45d, 0x24b, 0x1f44, 0x3d7, 0x6e, 0x580, 0x1d4, 0xa653, 0xf9, 0xff4e, 0x1e8f, 0xa75d, 0x269, 0xa663, 0x467, 0x169, 0x44d, 0xa76d, 0x493, 0x477, 0xff, 0x1f36, 0x37d, 0x2c31, 0xa683, 0x2c87, 0x1f84, 0x2c41, 0x1e93, 0x3b4, 0x2c97, 0x199, 0x26b, 0x1f94, 0x441, 0xff52, 0x2c9b, 0x24e1, 0xff47, 0x2ca7, 0x2c4d, 0x1fa4, 0x2d0e, 0x1eb3, 0xff57, 0xa649, 0x1b9, 0x56b, 0x1fe5, 0x1fb3, 0x2d1e, 0x144, 0x1ec3, 0x28c, 0x2cc7, 0x69, 0x1c9, 0x57b, 0x195, 0x1fc3, 0xee, 0x1ed3, 0x2cd7, 0x79, 0x2c55, 0xfe, 0x2173, 0x1ee3, 0x3e5, 0x4e7, 0xff56, 0x444, 0x582, 0x3b8, 0x4f7, 0x1f9, 0x1ff3, 0x2c36, 0x1e01, 0x2cab, 0x101, 0x3ae, 0x209, 0x10b, 0x2184, 0x1e11, 0x203, 0xa659, 0x3b9, 0x219, 0x11b, 0x2c4c, 0x1e55, 0x1e21, 0x523, 0xff46, 0x3c9, 0x229, 0x6b, 0x44c, 0x2d0f, 0xff5a, 0x562, 0x1b6, 0x24d1, 0xa737, 0x2d02, 0x2d1f, 0x1e41, 0x1f22, 0x572, 0x1c6, 0x64, 0x4c8, 0xa747, 0x249, 0x14b, 0xef, 0x1e51, 0x2c53, 0x2172, 0x1d6, 0x74, 0xa757, 0x1f26, 0x15b, 0x27d, 0x1e61, 0x24d4, 0xa767, 0x2c3a, 0x16b, 0x46d, 0x1e71, 0x213, 0x1e69, 0x3f2, 0x47d, 0xa681, 0x217a, 0x3b7, 0x2c37, 0xa787, 0x2c46, 0x2c8d, 0x3cd, 0xa691, 0x24dc, 0x437, 0x455, 0x1f66, 0x2c9d, 0x3be, 0xff41, 0x1ea1, 0x2d04, 0x447, 0x4ad, 0xff51, 0x1eb1, 0x1f30, 0x2d14, 0x1f7c, 0x43e, 0x56d, 0x4bd, 0x475, 0x1ec1, 0x180, 0x2ccb, 0x146, 0xe4, 0x1cc, 0x57d, 0x24e6, 0x6f, 0x1ed1, 0xf4, 0x4dd, 0x3df, 0x1ee1, 0x2175, 0x2c68, 0x14f, 0x1eb, 0x4ed, 0xa68d, 0x3ef, 0x1ef1, 0x4d3, 0x1fb, 0x1e89, 0x37c, 0x2c32, 0x1ebb, 0x105, 0x1e07, 0x11f, 0xa78c, 0x50d, 0x259, 0xff4c, 0x3b3, 0x432, 0x115, 0x1e17, 0x1f93, 0x44e, 0x51d, 0x275, 0x21f, 0x3c3, 0x2c52, 0x2d05, 0x125, 0x69, 0x1fa3, 0x1b0, 0x22f, 0xff50, 0x1e33, 0x2d15, 0x135, 0x1e37, 0x1f71, 0x24d7, 0x56c, 0x2c66, 0xa741, 0x257, 0xe5, 0x1e47, 0x1f75, 0x6a, 0x4ce, 0x57c, 0x1d0, 0x48d, 0xa751, 0x2ce3, 0xf5, 0x155, 0x1e57, 0x1f77, 0x7a, 0x1e5, 0xa761, 0x463, 0x165, 0x1e67, 0x1f7b, 0x2cee, 0xa73d, 0x2c73, 0x1f55, 0x175, 0x1e77, 0x2cb9, 0x1f7d, 0x2c95, 0xe1, 0x2c83, 0x2c47, 0x1e87, 0x3ad, 0x1f03, 0x2c3d, 0x2c3e, 0xa643, 0x263, 0xa697, 0x3b8, 0x1f13, 0x43d, 0x2ca3, 0x1a5, 0x1ea7, 0x3c8, 0x1f23, 0x2d0a, 0x2c5d, 0x49d, 0x24e3, 0x4b3, 0x2c4f, 0x567, 0x1eb7, 0x1f33, 0x2d1a, 0x140, 0xa64b, 0x65, 0x1c6, 0x577, 0x1ec7, 0x4cf, 0xea, 0x4db, 0xa74d, 0xa72b, 0x2cd3, 0x75, 0x1ed7, 0x3d9, 0x1f53, 0xfa, 0x1e45, 0x4a5, 0x436, 0xa64f, 0x4e3, 0x2c57, 0x1ee7, 0x3e9, 0x1f63, 0x251, 0x4ab, 0x217f, 0x1fd, 0x1f21, 0x1e53, 0x1f5, 0x1ef7, 0x2c42, 0xa77c, 0 };
struct TDefaultPreConverter: public TTr {
    TDefaultPreConverter()
        : TTr(TDEFAULTPRECONVERTER_AUX_FROM, TDEFAULTPRECONVERTER_AUX_TO, NULL, NULL, NULL)
    {}
};
const TChar EASTERN_SLAVIC_RENYXA[] = { 0x41, 0x42, 0x43, 0x45, 0x48, 0x49, 0x4b, 0x4d, 0x4f, 0x50, 0x61, 0x63, 0x65, 0x67, 0x69, 0x6b, 0x6e, 0x6f, 0x70, 0x54, 0x58, 0x59, 0x75, 0x78, 0x79, 0xcb, 0xeb, 0 };
const TChar TEASTERNSLAVICDERENYXER_AUX_FROM[] = { 0x475, 0x4b, 0x74, 0x41, 0x43, 0x42, 0x45, 0x49, 0x48, 0xcb, 0x4d, 0x463, 0x4f, 0x50, 0x462, 0x54, 0x59, 0x58, 0x61, 0x63, 0x62, 0x65, 0x67, 0x69, 0x68, 0x6b, 0x6d, 0x6f, 0x6e, 0x70, 0x473, 0x472, 0x75, 0x474, 0x79, 0x78, 0xeb, 0 };
const TChar TEASTERNSLAVICDERENYXER_AUX_TO[] = { 0x438, 0x41a, 0x442, 0x410, 0x421, 0x412, 0x415, 0x406, 0x41d, 0x401, 0x41c, 0x435, 0x41e, 0x420, 0x415, 0x422, 0x423, 0x425, 0x430, 0x441, 0x432, 0x435, 0x434, 0x456, 0x43d, 0x43a, 0x43c, 0x43e, 0x43f, 0x440, 0x444, 0x424, 0x438, 0x418, 0x443, 0x445, 0x451, 0 };
const TChar TEASTERNSLAVICDERENYXER_AUX_KILL[] = { 0x301, 0 };
struct TEasternSlavicDerenyxer: public TTr {
    TEasternSlavicDerenyxer()
        : TTr(TEASTERNSLAVICDERENYXER_AUX_FROM, TEASTERNSLAVICDERENYXER_AUX_TO, TEASTERNSLAVICDERENYXER_AUX_KILL, NULL, NULL)
    {}
};
const TChar TEASTERNSLAVICPRECONVERTER_AUX_FROM[] = { 0x181, 0x1e04, 0x2c00, 0x408, 0x1f0a, 0x20c, 0x2cac, 0x191, 0x1e14, 0x116, 0x2c18, 0x1f1a, 0x39d, 0x21c, 0x51e, 0x24bc, 0x1e5a, 0x1e24, 0x2126, 0x2c28, 0x10c0, 0x106, 0x22c, 0x1b1, 0x1e34, 0x136, 0x10bb, 0x1f3a, 0x53e, 0x24c3, 0xa644, 0x160, 0x41a, 0xcb, 0x1f4a, 0x24c, 0xa65c, 0x54e, 0x1d1, 0x50, 0x1f39, 0x1e62, 0xa654, 0x156, 0xdb, 0xa75a, 0xa780, 0x1e64, 0x2c10, 0x468, 0xeb, 0x1f6a, 0x1e4c, 0x2cbc, 0x1f1, 0x70, 0x372, 0x1e74, 0x176, 0x478, 0x3fd, 0x2c03, 0x1e6a, 0x1e84, 0x186, 0x2c88, 0x1f8a, 0x1f6c, 0x2c13, 0x392, 0x1e94, 0x418, 0x2c98, 0x2c6e, 0x158, 0x2cc4, 0x10a0, 0x423, 0xff25, 0x1ea4, 0x1a6, 0x2ca8, 0x1f8b, 0x1faa, 0x24c1, 0x10b0, 0x1e72, 0xff35, 0x1eb4, 0x24b6, 0x10c5, 0x4b8, 0x10b2, 0x1fba, 0x141, 0xc0, 0x1ec4, 0x420, 0x549, 0x2cc8, 0x4b, 0x1fca, 0x2ccc, 0xd0, 0x411, 0xa722, 0x1ed4, 0x2cd8, 0x1fda, 0x2161, 0x2c63, 0x3e2, 0x1ee4, 0x1e6, 0x4e8, 0x6b, 0x126, 0xa66c, 0x473, 0x1ef4, 0x428, 0x498, 0x4f8, 0x2c7e, 0x10ab, 0xa726, 0x4d4, 0x401, 0xff2a, 0x508, 0x18b, 0x1e0a, 0x1f8f, 0x40e, 0x110, 0x1e82, 0x4a2, 0x24c5, 0x518, 0x1e1a, 0x1f9f, 0x2c1e, 0x10a1, 0x120, 0x222, 0xa724, 0x3a7, 0x1e2a, 0x1faf, 0x2c2e, 0x10b1, 0x2c09, 0x232, 0xff34, 0x24b9, 0x538, 0x415, 0x1e3a, 0x10c1, 0xa68a, 0xa744, 0x46, 0x4c9, 0x548, 0x1cb, 0xa64a, 0x38c, 0xd1, 0x150, 0xa754, 0x56, 0x1db, 0xa65a, 0xa664, 0x2160, 0xa73a, 0x216c, 0xa764, 0x2c70, 0xa66a, 0x46e, 0x170, 0xa692, 0xa77d, 0x3f7, 0x1e7a, 0x47e, 0xa784, 0x409, 0x15e, 0x1e8a, 0xc3, 0x1f0f, 0x48e, 0x190, 0xa742, 0x2c19, 0x39c, 0x2c9e, 0x1a0, 0x10a6, 0x429, 0x212b, 0x1eaa, 0xff2f, 0x4ae, 0x533, 0x10b6, 0x13b, 0x49e, 0x23d, 0x24cb, 0x1f3f, 0x4be, 0x41, 0x2c21, 0x543, 0xa74a, 0xc6, 0x1eca, 0x24ce, 0x51, 0x553, 0x1ea2, 0x2cae, 0xa640, 0xd6, 0x1eda, 0x3dc, 0x1f5f, 0x4de, 0x61, 0x1e0, 0x419, 0x4f2, 0x2c69, 0x216b, 0x1eea, 0x3ec, 0x1f6f, 0x4fc, 0x1e80, 0x2c29, 0xa752, 0x2c7f, 0x17b, 0x1efa, 0x4fe, 0x200, 0x1f2f, 0x102, 0x404, 0x1f89, 0x1e08, 0x556, 0x1f0e, 0x391, 0x210, 0x402, 0x2c08, 0x414, 0x1f99, 0x1e18, 0x51a, 0x19d, 0x3a1, 0x220, 0x122, 0x2c24, 0x10a7, 0x1fa9, 0x1e28, 0x206, 0xa72e, 0x230, 0x132, 0x10b7, 0x1fb9, 0x1e38, 0x53a, 0x2cb2, 0x24bf, 0xa73e, 0x1e02, 0x40a, 0xc7, 0x2c60, 0x1fc9, 0x1e48, 0x54a, 0x1cd, 0x4c, 0x24cf, 0xa74e, 0x152, 0xa68c, 0x1fd9, 0x1e58, 0x20e, 0xa75e, 0x162, 0x464, 0x1fe9, 0xa668, 0x166, 0xa76e, 0x172, 0xa72c, 0x376, 0x1ff9, 0x1e78, 0x2cbe, 0xa77e, 0x426, 0x182, 0x2c84, 0x386, 0x1f09, 0xa688, 0x1f28, 0x216, 0x2c0f, 0x1f8e, 0x10c4, 0x494, 0x396, 0x1f19, 0x16e, 0x41f, 0x1f9e, 0x1a2, 0x2ca4, 0x3a6, 0xff29, 0x1ea8, 0x24c6, 0x10ac, 0x42f, 0x1fae, 0x1b2, 0x535, 0x4b4, 0xff39, 0x1eb8, 0x23b, 0x1e1e, 0x13d, 0x10bc, 0x545, 0x24c4, 0x47, 0x1f49, 0x1ec8, 0xcc, 0x422, 0x555, 0x2cd4, 0x57, 0x1f59, 0x1ed8, 0x2cce, 0xdc, 0x1e2, 0x4e4, 0x67, 0x3e6, 0x1f69, 0x1ee8, 0x1e26, 0x216d, 0x2c6f, 0x1f2, 0x4f4, 0xff28, 0xa779, 0x1ef8, 0x17d, 0x2cb4, 0x42a, 0x504, 0x187, 0x2c80, 0x1f08, 0x4d6, 0x10c, 0x1e0e, 0x514, 0x197, 0x4ee, 0x1f18, 0x39b, 0x2c1a, 0x11c, 0xa684, 0x524, 0x1a7, 0x226, 0xa728, 0x3ab, 0x2c2a, 0x10ad, 0x12c, 0x407, 0x1e2e, 0x534, 0x1b7, 0x1e90, 0xff38, 0x2cde, 0x10bd, 0x40b, 0x1e3e, 0x42, 0x4c5, 0x544, 0x1c7, 0x246, 0xa748, 0xcd, 0x14c, 0x1e4e, 0x52, 0xa686, 0x554, 0x1d7, 0xa738, 0xa758, 0xdd, 0x15c, 0x2cc2, 0x1e5e, 0x62, 0x2cb6, 0x403, 0x2c90, 0x1f68, 0x46a, 0x413, 0x1e6e, 0x370, 0x1f7, 0x1e8, 0x47a, 0x2c0c, 0xa694, 0x2c05, 0xa734, 0x1f88, 0x2c8a, 0xa68e, 0x2c15, 0x1fea, 0x1f98, 0x49a, 0x2c1b, 0x1e9e, 0x3a0, 0xff23, 0x1f9a, 0x425, 0x1fa8, 0xa646, 0x1ac, 0x4b6, 0x1eae, 0xff33, 0x1ef2, 0x1f48, 0x1fb8, 0x4ba, 0x1bc, 0x53f, 0x1ebe, 0x241, 0xc2, 0x4c3, 0x147, 0x4a0, 0x19c, 0x1fc8, 0x1e42, 0x24ca, 0x4d, 0x2cba, 0x54f, 0x1ece, 0xd2, 0x1fd8, 0x2cda, 0x1ede, 0x3e0, 0x2167, 0x16c, 0x1fe8, 0x4ea, 0x6d, 0x1ec, 0x1eee, 0x2c75, 0x4a8, 0x1ff8, 0x4fa, 0x42b, 0x1efe, 0x400, 0x1e7e, 0x204, 0x506, 0x189, 0xff2d, 0xa656, 0x1f8d, 0x1e0c, 0x10e, 0x410, 0x502, 0x395, 0x214, 0x516, 0x1f9d, 0x1e1c, 0x2c04, 0x2c20, 0x10a3, 0xff22, 0x3a5, 0x224, 0x2cb0, 0x1a9, 0x1fad, 0x1e2c, 0x12e, 0x1f4b, 0x4a6, 0x10b3, 0xa732, 0x24be, 0x536, 0x24bb, 0xa65e, 0x1e3c, 0x40f, 0x2168, 0x10c3, 0x50a, 0x244, 0x546, 0x50e, 0x48, 0x4cb, 0xa64c, 0x40c, 0x539, 0xd3, 0xa76a, 0x24b8, 0x1d9, 0x58, 0x1e5c, 0x2164, 0x460, 0xa762, 0x68, 0x2ceb, 0xa666, 0x1e6c, 0x216e, 0x470, 0x112, 0x1e30, 0xa650, 0xa768, 0x78, 0x1e7c, 0x10c2, 0x2c14, 0x480, 0xa782, 0x2166, 0x2cc0, 0x2c0b, 0x38a, 0x1f0d, 0x1e8c, 0x18e, 0x490, 0x3a4, 0x2c8e, 0x41b, 0x39a, 0x1f1d, 0x2ca0, 0xff2b, 0x10a8, 0x2c2b, 0x3aa, 0x1f2d, 0x1eac, 0x1ae, 0x531, 0x4b0, 0x472, 0x24c8, 0x139, 0x10b8, 0x1f3d, 0x1ebc, 0x541, 0x24c0, 0x43, 0x24cd, 0xc8, 0x1f4d, 0x1ecc, 0x551, 0x2cd0, 0x53, 0xd8, 0x3da, 0x41c, 0x1edc, 0x1de, 0x4e0, 0x63, 0x496, 0x4d0, 0x2169, 0x2c6b, 0x3ea, 0x1f6d, 0x1eec, 0x1ee, 0x4f0, 0x179, 0x3fa, 0x2c92, 0x1efc, 0x1fe, 0x500, 0x24e, 0x12a, 0x406, 0x108, 0x20a, 0x1f0c, 0x38f, 0x2c2c, 0x510, 0x193, 0x1e12, 0x4d8, 0x118, 0x21a, 0x1f1c, 0x39f, 0x184, 0x520, 0x2cdc, 0x1e22, 0x2c26, 0x10a9, 0x128, 0x22a, 0xff24, 0x1f2c, 0x512, 0x1b3, 0x2132, 0x10b9, 0x23a, 0x1f3c, 0x4c1, 0x540, 0x48a, 0x2ce0, 0xc9, 0x40d, 0x24a, 0x1f4c, 0x3cf, 0x4e, 0x550, 0x1d3, 0xa652, 0xd9, 0xff2e, 0x1e8e, 0xa75c, 0x196, 0xa662, 0x466, 0x168, 0x42d, 0xa76c, 0x6e, 0x492, 0x476, 0x178, 0x1f3e, 0x3ff, 0x2c01, 0xa682, 0x2c86, 0x1f8c, 0x2c11, 0x1e92, 0x394, 0x2c96, 0x198, 0x2c62, 0x1f9c, 0x421, 0xff32, 0x2c9a, 0x24c7, 0xff27, 0x2ca6, 0x2c1d, 0x1fac, 0x10ae, 0x1eb2, 0xff37, 0xa648, 0x1b8, 0x53b, 0x1fec, 0x1fbc, 0x10be, 0x143, 0x1ec2, 0x245, 0x2cc6, 0x49, 0x1c8, 0x54b, 0x1f6, 0x1fcc, 0xce, 0x1ed2, 0x2cd6, 0x59, 0x2c25, 0xde, 0x2163, 0x1ee2, 0x3e4, 0x4e6, 0x69, 0xff36, 0x424, 0x552, 0x3f4, 0x4f6, 0x79, 0x1f8, 0x1ffc, 0x463, 0x2c06, 0x1e00, 0x2caa, 0x100, 0x389, 0x208, 0x10a, 0x2183, 0x1e10, 0x202, 0xa658, 0x399, 0x218, 0x11a, 0x2c1c, 0x1e54, 0x1e20, 0x522, 0xff26, 0x3a9, 0x228, 0x212a, 0x42c, 0x10af, 0xff3a, 0x532, 0x1b5, 0x24b7, 0xa736, 0x10a2, 0x10bf, 0x1e40, 0x1f2a, 0x542, 0x1c5, 0x44, 0x4c7, 0xa746, 0x248, 0x14a, 0xcf, 0x1e50, 0x2c23, 0x2162, 0x1d5, 0x54, 0xa756, 0x1f2e, 0x15a, 0x2c64, 0x1e60, 0x24ba, 0xa766, 0x2c0a, 0x16a, 0x46c, 0x1e70, 0x212, 0x74, 0x1e68, 0x3f9, 0x47c, 0xa680, 0x216a, 0x397, 0x2c07, 0xa786, 0x2c16, 0x2c8c, 0x38e, 0xa690, 0x24c2, 0x417, 0x405, 0x1f6e, 0x2c9c, 0x39e, 0xff21, 0x1ea0, 0x10a4, 0x427, 0x4ac, 0xff31, 0x1eb0, 0x1f38, 0x10b4, 0x1ffa, 0x41e, 0x53d, 0x4bc, 0x474, 0x1ec0, 0x243, 0x2cca, 0x145, 0xc4, 0x1ca, 0x54d, 0x24cc, 0x4f, 0x1ed0, 0xd4, 0x4dc, 0x3de, 0x1ee0, 0x2165, 0x2c67, 0x14e, 0x1ea, 0x4ec, 0x6f, 0x3ee, 0x1ef0, 0x4d2, 0x1fa, 0x1e88, 0x3fe, 0x2c02, 0x1eba, 0x104, 0x1e06, 0x11e, 0xa78b, 0x50c, 0x18f, 0xff2c, 0x393, 0x412, 0x114, 0x1e16, 0x1f9b, 0x42e, 0x51c, 0x19f, 0x21e, 0x3a3, 0x2c22, 0x10a5, 0x124, 0x130, 0x1fab, 0x1af, 0x22e, 0xff30, 0x1e32, 0x10b5, 0x134, 0x1e36, 0x1fbb, 0x24bd, 0x53c, 0x23e, 0xa740, 0x18a, 0xc5, 0x1e46, 0x1fcb, 0x4a, 0x4cd, 0x54c, 0x1cf, 0x48c, 0xa750, 0x2ce2, 0xd5, 0x154, 0x1e56, 0x1fdb, 0x5a, 0x1e4, 0xa760, 0x462, 0x164, 0x1e66, 0x1feb, 0x2ced, 0xa73c, 0x2c72, 0x1f5d, 0x174, 0x1e76, 0x2cb8, 0x1ffb, 0x2c94, 0xc1, 0x2c82, 0x2c17, 0x1e86, 0x388, 0x1f0b, 0x2c0d, 0x2c0e, 0xa642, 0x194, 0xa696, 0x398, 0x1f1b, 0x41d, 0x2ca2, 0x1a4, 0x1ea6, 0x3a8, 0x1f2b, 0x10aa, 0x2c2d, 0x49c, 0x24c9, 0x4b2, 0x2c1f, 0x537, 0x1eb6, 0x475, 0x1f3b, 0x10ba, 0x13f, 0x1e4a, 0x45, 0x1c4, 0x547, 0x1ec6, 0x4c0, 0xca, 0x4da, 0xa74c, 0xa72a, 0x2cd2, 0x55, 0x1ed6, 0x3d8, 0x1f5b, 0xda, 0x1e44, 0x4a4, 0x416, 0xa64e, 0x4e2, 0x65, 0x2c27, 0x1ee6, 0x3e8, 0x1f6b, 0x2c6d, 0x4aa, 0x216f, 0x1fc, 0x1f29, 0x1e52, 0x75, 0x1f4, 0x1ef6, 0x2c12, 0xa77b, 0 };
const TChar TEASTERNSLAVICPRECONVERTER_AUX_TO[] = { 0x253, 0x1e05, 0x2c30, 0x458, 0x1f02, 0x20d, 0x2cad, 0x192, 0x1e15, 0x117, 0x2c48, 0x1f12, 0x3bd, 0x21d, 0x51f, 0x24d6, 0x1e5b, 0x1e25, 0x3c9, 0x2c58, 0x2d20, 0x107, 0x22d, 0x28a, 0x1e35, 0x137, 0x2d1b, 0x1f32, 0x56e, 0x24dd, 0xa645, 0x161, 0x43a, 0x451, 0x1f42, 0x24d, 0xa65d, 0x57e, 0x1d2, 0x440, 0x1f31, 0x1e63, 0xa655, 0x157, 0xfb, 0xa75b, 0xa781, 0x1e65, 0x2c40, 0x469, 0x451, 0x1f62, 0x1e4d, 0x2cbd, 0x1f3, 0x440, 0x373, 0x1e75, 0x177, 0x479, 0x37b, 0x2c33, 0x1e6b, 0x1e85, 0x254, 0x2c89, 0x1f82, 0x1f64, 0x2c43, 0x3b2, 0x1e95, 0x438, 0x2c99, 0x271, 0x159, 0x2cc5, 0x2d00, 0x443, 0xff45, 0x1ea5, 0x280, 0x2ca9, 0x1f83, 0x1fa2, 0x24db, 0x2d10, 0x1e73, 0xff55, 0x1eb5, 0x24d0, 0x2d25, 0x4b9, 0x2d12, 0x1f70, 0x142, 0xe0, 0x1ec5, 0x440, 0x579, 0x2cc9, 0x43a, 0x1f74, 0x2ccd, 0xf0, 0x431, 0xa723, 0x1ed5, 0x2cd9, 0x1f76, 0x2171, 0x1d7d, 0x3e3, 0x1ee5, 0x1e7, 0x4e9, 0x43a, 0x127, 0xa66d, 0x444, 0x1ef5, 0x448, 0x499, 0x4f9, 0x23f, 0x2d0b, 0xa727, 0x4d5, 0x451, 0xff4a, 0x509, 0x18c, 0x1e0b, 0x1f87, 0x45e, 0x111, 0x1e83, 0x4a3, 0x24df, 0x519, 0x1e1b, 0x1f97, 0x2c4e, 0x2d01, 0x121, 0x223, 0xa725, 0x3c7, 0x1e2b, 0x1fa7, 0x2c5e, 0x2d11, 0x2c39, 0x233, 0xff54, 0x24d3, 0x568, 0x435, 0x1e3b, 0x2d21, 0xa68b, 0xa745, 0x66, 0x4ca, 0x578, 0x1cc, 0xa64b, 0x3cc, 0xf1, 0x151, 0xa755, 0x76, 0x1dc, 0xa65b, 0xa665, 0x2170, 0xa73b, 0x217c, 0xa765, 0x252, 0xa66b, 0x46f, 0x171, 0xa693, 0x1d79, 0x3f8, 0x1e7b, 0x47f, 0xa785, 0x459, 0x15f, 0x1e8b, 0xe3, 0x1f07, 0x48f, 0x25b, 0xa743, 0x2c49, 0x3bc, 0x2c9f, 0x1a1, 0x2d06, 0x449, 0xe5, 0x1eab, 0xff4f, 0x4af, 0x563, 0x2d16, 0x13c, 0x49f, 0x19a, 0x24e5, 0x1f37, 0x4bf, 0x430, 0x2c51, 0x573, 0xa74b, 0xe6, 0x1ecb, 0x24e8, 0x71, 0x583, 0x1ea3, 0x2caf, 0xa641, 0xf6, 0x1edb, 0x3dd, 0x1f57, 0x4df, 0x430, 0x1e1, 0x439, 0x4f3, 0x2c6a, 0x217b, 0x1eeb, 0x3ed, 0x1f67, 0x4fd, 0x1e81, 0x2c59, 0xa753, 0x240, 0x17c, 0x1efb, 0x4ff, 0x201, 0x1f27, 0x103, 0x454, 0x1f81, 0x1e09, 0x586, 0x1f06, 0x3b1, 0x211, 0x452, 0x2c38, 0x434, 0x1f91, 0x1e19, 0x51b, 0x272, 0x3c1, 0x19e, 0x123, 0x2c54, 0x2d07, 0x1fa1, 0x1e29, 0x207, 0xa72f, 0x231, 0x133, 0x2d17, 0x1fb1, 0x1e39, 0x56a, 0x2cb3, 0x24d9, 0xa73f, 0x1e03, 0x45a, 0xe7, 0x2c61, 0x1f73, 0x1e49, 0x57a, 0x1ce, 0x6c, 0x24e9, 0xa74f, 0x153, 0xa68d, 0x1fd1, 0x1e59, 0x20f, 0xa75f, 0x163, 0x465, 0x1fe1, 0xa669, 0x167, 0xa76f, 0x173, 0xa72d, 0x377, 0x1f79, 0x1e79, 0x2cbf, 0xa77f, 0x446, 0x183, 0x2c85, 0x3ac, 0x1f01, 0xa689, 0x1f20, 0x217, 0x2c3f, 0x1f86, 0x2d24, 0x495, 0x3b6, 0x1f11, 0x16f, 0x43f, 0x1f96, 0x1a3, 0x2ca5, 0x3c6, 0xff49, 0x1ea9, 0x24e0, 0x2d0c, 0x44f, 0x1fa6, 0x28b, 0x565, 0x4b5, 0xff59, 0x1eb9, 0x23c, 0x1e1f, 0x13e, 0x2d1c, 0x575, 0x24de, 0x434, 0x1f41, 0x1ec9, 0xec, 0x442, 0x585, 0x2cd5, 0x77, 0x1f51, 0x1ed9, 0x2ccf, 0xfc, 0x1e3, 0x4e5, 0x434, 0x3e7, 0x1f61, 0x1ee9, 0x1e27, 0x217d, 0x250, 0x1f3, 0x4f5, 0xff48, 0xa77a, 0x1ef9, 0x17e, 0x2cb5, 0x44a, 0x505, 0x188, 0x2c81, 0x1f00, 0x4d7, 0x10d, 0x1e0f, 0x515, 0x268, 0x4ef, 0x1f10, 0x3bb, 0x2c4a, 0x11d, 0xa685, 0x525, 0x1a8, 0x227, 0xa729, 0x3cb, 0x2c5a, 0x2d0d, 0x12d, 0x457, 0x1e2f, 0x564, 0x292, 0x1e91, 0xff58, 0x2cdf, 0x2d1d, 0x45b, 0x1e3f, 0x432, 0x4c6, 0x574, 0x1c9, 0x247, 0xa749, 0xed, 0x14d, 0x1e4f, 0x72, 0xa687, 0x584, 0x1d8, 0xa739, 0xa759, 0xfd, 0x15d, 0x2cc3, 0x1e5f, 0x432, 0x2cb7, 0x453, 0x2c91, 0x1f60, 0x46b, 0x433, 0x1e6f, 0x371, 0x1bf, 0x1e9, 0x47b, 0x2c3c, 0xa695, 0x2c35, 0xa735, 0x1f80, 0x2c8b, 0xa68f, 0x2c45, 0x1f7a, 0x1f90, 0x49b, 0x2c4b, 0xdf, 0x3c0, 0xff43, 0x1f92, 0x445, 0x1fa0, 0xa647, 0x1ad, 0x4b7, 0x1eaf, 0xff53, 0x1ef3, 0x1f40, 0x1fb0, 0x4bb, 0x1bd, 0x56f, 0x1ebf, 0x242, 0xe2, 0x4c4, 0x148, 0x4a1, 0x26f, 0x1f72, 0x1e43, 0x24e4, 0x43c, 0x2cbb, 0x57f, 0x1ecf, 0xf2, 0x1fd0, 0x2cdb, 0x1edf, 0x3e1, 0x2177, 0x16d, 0x1fe0, 0x4eb, 0x43c, 0x1ed, 0x1eef, 0x2c76, 0x4a9, 0x1f78, 0x4fb, 0x44b, 0x1eff, 0x450, 0x1e7f, 0x205, 0x507, 0x256, 0xff4d, 0xa657, 0x1f85, 0x1e0d, 0x10f, 0x430, 0x503, 0x3b5, 0x215, 0x517, 0x1f95, 0x1e1d, 0x2c34, 0x2c50, 0x2d03, 0xff42, 0x3c5, 0x225, 0x2cb1, 0x283, 0x1fa5, 0x1e2d, 0x12f, 0x1f43, 0x4a7, 0x2d13, 0xa733, 0x24d8, 0x566, 0x24d5, 0xa65f, 0x1e3d, 0x45f, 0x2178, 0x2d23, 0x50b, 0x289, 0x576, 0x50f, 0x43d, 0x4cc, 0xa64d, 0x45c, 0x569, 0xf3, 0xa76b, 0x24d2, 0x1da, 0x445, 0x1e5d, 0x2174, 0x461, 0xa763, 0x43d, 0x2cec, 0xa667, 0x1e6d, 0x217e, 0x471, 0x113, 0x1e31, 0xa651, 0xa769, 0x445, 0x1e7d, 0x2d22, 0x2c44, 0x481, 0xa783, 0x2176, 0x2cc1, 0x2c3b, 0x3af, 0x1f05, 0x1e8d, 0x1dd, 0x491, 0x3c4, 0x2c8f, 0x43b, 0x3ba, 0x1f15, 0x2ca1, 0xff4b, 0x2d08, 0x2c5b, 0x3ca, 0x1f25, 0x1ead, 0x288, 0x561, 0x4b1, 0x444, 0x24e2, 0x13a, 0x2d18, 0x1f35, 0x1ebd, 0x571, 0x24da, 0x441, 0x24e7, 0xe8, 0x1f45, 0x1ecd, 0x581, 0x2cd1, 0x73, 0xf8, 0x3db, 0x43c, 0x1edd, 0x1df, 0x4e1, 0x441, 0x497, 0x4d1, 0x2179, 0x2c6c, 0x3eb, 0x1f65, 0x1eed, 0x1ef, 0x4f1, 0x17a, 0x3fb, 0x2c93, 0x1efd, 0x1ff, 0x501, 0x24f, 0x12b, 0x456, 0x109, 0x20b, 0x1f04, 0x3ce, 0x2c5c, 0x511, 0x260, 0x1e13, 0x4d9, 0x119, 0x21b, 0x1f14, 0x3bf, 0x185, 0x521, 0x2cdd, 0x1e23, 0x2c56, 0x2d09, 0x129, 0x22b, 0xff44, 0x1f24, 0x513, 0x1b4, 0x214e, 0x2d19, 0x2c65, 0x1f34, 0x4c2, 0x570, 0x48b, 0x2ce1, 0xe9, 0x45d, 0x24b, 0x1f44, 0x3d7, 0x43f, 0x580, 0x1d4, 0xa653, 0xf9, 0xff4e, 0x1e8f, 0xa75d, 0x269, 0xa663, 0x467, 0x169, 0x44d, 0xa76d, 0x43f, 0x493, 0x477, 0xff, 0x1f36, 0x37d, 0x2c31, 0xa683, 0x2c87, 0x1f84, 0x2c41, 0x1e93, 0x3b4, 0x2c97, 0x199, 0x26b, 0x1f94, 0x441, 0xff52, 0x2c9b, 0x24e1, 0xff47, 0x2ca7, 0x2c4d, 0x1fa4, 0x2d0e, 0x1eb3, 0xff57, 0xa649, 0x1b9, 0x56b, 0x1fe5, 0x1fb3, 0x2d1e, 0x144, 0x1ec3, 0x28c, 0x2cc7, 0x456, 0x1c9, 0x57b, 0x195, 0x1fc3, 0xee, 0x1ed3, 0x2cd7, 0x443, 0x2c55, 0xfe, 0x2173, 0x1ee3, 0x3e5, 0x4e7, 0x456, 0xff56, 0x444, 0x582, 0x3b8, 0x4f7, 0x443, 0x1f9, 0x1ff3, 0x435, 0x2c36, 0x1e01, 0x2cab, 0x101, 0x3ae, 0x209, 0x10b, 0x2184, 0x1e11, 0x203, 0xa659, 0x3b9, 0x219, 0x11b, 0x2c4c, 0x1e55, 0x1e21, 0x523, 0xff46, 0x3c9, 0x229, 0x43a, 0x44c, 0x2d0f, 0xff5a, 0x562, 0x1b6, 0x24d1, 0xa737, 0x2d02, 0x2d1f, 0x1e41, 0x1f22, 0x572, 0x1c6, 0x64, 0x4c8, 0xa747, 0x249, 0x14b, 0xef, 0x1e51, 0x2c53, 0x2172, 0x1d6, 0x442, 0xa757, 0x1f26, 0x15b, 0x27d, 0x1e61, 0x24d4, 0xa767, 0x2c3a, 0x16b, 0x46d, 0x1e71, 0x213, 0x442, 0x1e69, 0x3f2, 0x47d, 0xa681, 0x217a, 0x3b7, 0x2c37, 0xa787, 0x2c46, 0x2c8d, 0x3cd, 0xa691, 0x24dc, 0x437, 0x455, 0x1f66, 0x2c9d, 0x3be, 0xff41, 0x1ea1, 0x2d04, 0x447, 0x4ad, 0xff51, 0x1eb1, 0x1f30, 0x2d14, 0x1f7c, 0x43e, 0x56d, 0x4bd, 0x438, 0x1ec1, 0x180, 0x2ccb, 0x146, 0xe4, 0x1cc, 0x57d, 0x24e6, 0x43e, 0x1ed1, 0xf4, 0x4dd, 0x3df, 0x1ee1, 0x2175, 0x2c68, 0x14f, 0x1eb, 0x4ed, 0x43e, 0x3ef, 0x1ef1, 0x4d3, 0x1fb, 0x1e89, 0x37c, 0x2c32, 0x1ebb, 0x105, 0x1e07, 0x11f, 0xa78c, 0x50d, 0x259, 0xff4c, 0x3b3, 0x432, 0x115, 0x1e17, 0x1f93, 0x44e, 0x51d, 0x275, 0x21f, 0x3c3, 0x2c52, 0x2d05, 0x125, 0x456, 0x1fa3, 0x1b0, 0x22f, 0xff50, 0x1e33, 0x2d15, 0x135, 0x1e37, 0x1f71, 0x24d7, 0x56c, 0x2c66, 0xa741, 0x257, 0xe5, 0x1e47, 0x1f75, 0x6a, 0x4ce, 0x57c, 0x1d0, 0x48d, 0xa751, 0x2ce3, 0xf5, 0x155, 0x1e57, 0x1f77, 0x7a, 0x1e5, 0xa761, 0x435, 0x165, 0x1e67, 0x1f7b, 0x2cee, 0xa73d, 0x2c73, 0x1f55, 0x175, 0x1e77, 0x2cb9, 0x1f7d, 0x2c95, 0xe1, 0x2c83, 0x2c47, 0x1e87, 0x3ad, 0x1f03, 0x2c3d, 0x2c3e, 0xa643, 0x263, 0xa697, 0x3b8, 0x1f13, 0x43d, 0x2ca3, 0x1a5, 0x1ea7, 0x3c8, 0x1f23, 0x2d0a, 0x2c5d, 0x49d, 0x24e3, 0x4b3, 0x2c4f, 0x567, 0x1eb7, 0x438, 0x1f33, 0x2d1a, 0x140, 0x1e4b, 0x435, 0x1c6, 0x577, 0x1ec7, 0x4cf, 0xea, 0x4db, 0xa74d, 0xa72b, 0x2cd3, 0x438, 0x1ed7, 0x3d9, 0x1f53, 0xfa, 0x1e45, 0x4a5, 0x436, 0xa64f, 0x4e3, 0x435, 0x2c57, 0x1ee7, 0x3e9, 0x1f63, 0x251, 0x4ab, 0x217f, 0x1fd, 0x1f21, 0x1e53, 0x438, 0x1f5, 0x1ef7, 0x2c42, 0xa77c, 0 };
struct TEasternSlavicPreConverter: public TTr {
    TEasternSlavicPreConverter()
        : TTr(TEASTERNSLAVICPRECONVERTER_AUX_FROM, TEASTERNSLAVICPRECONVERTER_AUX_TO, NULL, NULL, NULL)
    {}
};
const TChar TGENERALCYRILICCONVERTER_AUX_FROM[] = { 0x2019, 0x401, 0x451, 0x491, 0x490, 0 };
const TChar TGENERALCYRILICCONVERTER_AUX_TO[] = { 0x27, 0x415, 0x435, 0x433, 0x413, 0 };
const TChar TGENERALCYRILICCONVERTER_AUX_KILL[] = { 0x301, 0 };
struct TGeneralCyrilicConverter: public TTr {
    TGeneralCyrilicConverter()
        : TTr(TGENERALCYRILICCONVERTER_AUX_FROM, TGENERALCYRILICCONVERTER_AUX_TO, TGENERALCYRILICCONVERTER_AUX_KILL, NULL, NULL)
    {}
};
const TChar CJK_UNIFIED_BEGIN = 19968;
const TChar CJK_UNIFIED_END = 40960;
const TChar CJK_UNIFIED_EXT_A_BEGIN = 13312;
const TChar CJK_UNIFIED_EXT_A_END = 19904;
const TChar CJK_COMPATIBILITY_BEGIN = 63744;
const TChar CJK_COMPATIBILITY_END = 64256;
const TChar CJK_DESCRIPTION_BEGIN = 12272;
const TChar CJK_DESCRIPTION_END = 12284;
const TChar BOPOMOFO_BEGIN = 12544;
const TChar BOPOMOFO_END = 12592;
const TChar HIRAGANA_KATAKANA_BEGIN = 12352;
const TChar HIRAGANA_KATAKANA_END = 12544;
const TChar HALFWIDTH_KATAKANA_BEGIN = 65382;
const TChar HALFWIDTH_KATAKANA_END = 65440;
const TChar HANGUL_BEGIN = 4352;
const TChar HANGUL_END = 4608;
const TChar HANGUL_EXT_A_BEGIN = 43360;
const TChar HANGUL_EXT_A_END = 43392;
const TChar HANGUL_EXT_B_BEGIN = 55216;
const TChar HANGUL_EXT_B_END = 55296;
const TChar HANGUL_COMPATIBILITY_BEGIN = 12592;
const TChar HANGUL_COMPATIBILITY_END = 12688;
const TChar HANGUL_SYLLABLES_BEGIN = 44032;
const TChar HANGUL_SYLLABLES_END = 55204;
const TChar HALFWIDTH_HANGUL_BEGIN = 65440;
const TChar HALFWIDTH_HANGUL_END = 65501;
const TChar CJK_APOST_AND_HYPH[] = { 0x27, 0x2019, 0x2d, 0xff07, 0xff0d, 0 };
const TChar ARM_REQUIRED_ALPHA[] = { 0x531, 0x535, 0x537, 0x538, 0x53b, 0x548, 0x555, 0x561, 0x565, 0x567, 0x568, 0x56b, 0x578, 0x585, 0 };
const TChar ARM_NORMAL_ALPHA[] = { 0x531, 0x532, 0x533, 0x534, 0x535, 0x536, 0x537, 0x538, 0x539, 0x53a, 0x53b, 0x53c, 0x53d, 0x53e, 0x53f, 0x540, 0x541, 0x542, 0x543, 0x544, 0x545, 0x546, 0x547, 0x548, 0x549, 0x54a, 0x54b, 0x54c, 0x54d, 0x54e, 0x54f, 0x550, 0x551, 0x552, 0x553, 0x554, 0x555, 0x556, 0x561, 0x562, 0x563, 0x564, 0x565, 0x566, 0x567, 0x568, 0x569, 0x56a, 0x56b, 0x56c, 0x56d, 0x56e, 0x56f, 0x570, 0x571, 0x572, 0x573, 0x574, 0x575, 0x576, 0x577, 0x578, 0x579, 0x57a, 0x57b, 0x57c, 0x57d, 0x57e, 0x57f, 0x580, 0x581, 0x582, 0x583, 0x584, 0x585, 0x586, 0x587, 0 };
const TChar ARM_SIGNS[] = { 0x27, 0x2019, 0x2d, 0x559, 0x55a, 0x55b, 0 };
const TChar BAK_REQUIRED_ALPHA[] = { 0x410, 0x415, 0x418, 0x41e, 0x423, 0x42b, 0x42d, 0x42e, 0x42f, 0x401, 0x430, 0x435, 0x438, 0x43e, 0x443, 0x44b, 0x44d, 0x44e, 0x44f, 0x451, 0x401, 0x451, 0x4e8, 0x4e9, 0x4d8, 0x4d9, 0 };
const TChar BAK_NORMAL_ALPHA[] = { 0x411, 0x412, 0x413, 0x414, 0x416, 0x417, 0x419, 0x41a, 0x41b, 0x41c, 0x41d, 0x41f, 0x420, 0x421, 0x422, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42a, 0x42c, 0x431, 0x432, 0x433, 0x434, 0x436, 0x437, 0x439, 0x43a, 0x43b, 0x43c, 0x43d, 0x43f, 0x440, 0x441, 0x442, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44a, 0x44c, 0x492, 0x493, 0x498, 0x499, 0x4a0, 0x4a1, 0x4a2, 0x4a3, 0x4aa, 0x4ab, 0x4ae, 0x4af, 0x4ba, 0x4bb, 0x42a, 0x44a, 0 };
const TChar BEL_REQUIRED_ALPHA[] = { 0x410, 0x415, 0x41e, 0x423, 0x42b, 0x42d, 0x42e, 0x42f, 0x401, 0x406, 0x430, 0x435, 0x43e, 0x443, 0x44b, 0x44d, 0x44e, 0x44f, 0x451, 0x456, 0 };
const TChar BEL_NORMAL_ALPHA[] = { 0x411, 0x412, 0x413, 0x414, 0x416, 0x417, 0x419, 0x41a, 0x41b, 0x41c, 0x41d, 0x41f, 0x420, 0x421, 0x422, 0x424, 0x425, 0x426, 0x427, 0x428, 0x42c, 0x40e, 0x490, 0x431, 0x432, 0x433, 0x434, 0x436, 0x437, 0x439, 0x43a, 0x43b, 0x43c, 0x43d, 0x43f, 0x440, 0x441, 0x442, 0x444, 0x445, 0x446, 0x447, 0x448, 0x44c, 0x45e, 0x491, 0 };
const TChar TBELARUSIANCONVERTER_AUX_FROM[] = { 0x2019, 0x490, 0x491, 0 };
const TChar TBELARUSIANCONVERTER_AUX_TO[] = { 0x27, 0x413, 0x433, 0 };
const TChar TBELARUSIANCONVERTER_AUX_KILL[] = { 0x301, 0 };
struct TBelarusianConverter: public TTr {
    TBelarusianConverter()
        : TTr(TBELARUSIANCONVERTER_AUX_FROM, TBELARUSIANCONVERTER_AUX_TO, TBELARUSIANCONVERTER_AUX_KILL, NULL, NULL)
    {}
};
const TChar BUL_REQUIRED_ALPHA[] = { 0x410, 0x415, 0x418, 0x41e, 0x423, 0x42a, 0x42e, 0x42f, 0x430, 0x435, 0x438, 0x43e, 0x443, 0x44a, 0x44e, 0x44f, 0 };
const TChar BUL_NORMAL_ALPHA[] = { 0x411, 0x412, 0x413, 0x414, 0x416, 0x417, 0x419, 0x41a, 0x41b, 0x41c, 0x41d, 0x41f, 0x420, 0x421, 0x422, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42c, 0x431, 0x432, 0x433, 0x434, 0x436, 0x437, 0x439, 0x43a, 0x43b, 0x43c, 0x43d, 0x43f, 0x440, 0x441, 0x442, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44c, 0 };
const TChar BUL_ALIEN_ALPHA[] = { 0x41, 0x42, 0x43, 0x45, 0x48, 0x49, 0x4b, 0x4d, 0x4f, 0x50, 0x61, 0x63, 0x65, 0x67, 0x69, 0x6b, 0x6e, 0x6f, 0x70, 0x54, 0x58, 0x59, 0x75, 0x78, 0x79, 0 };
const size_t CHINESE_REQUIRED_ALPHA_SIZE = 28156;
const TChar CHU_REQUIRED_ALPHA[] = { 0x410, 0x415, 0x418, 0x41e, 0x423, 0x42b, 0x42d, 0x42e, 0x42f, 0x401, 0x430, 0x435, 0x438, 0x43e, 0x443, 0x44b, 0x44d, 0x44e, 0x44f, 0x451, 0x404, 0x454, 0x406, 0x456, 0x460, 0x461, 0x462, 0x463, 0x474, 0x475, 0x478, 0x479, 0x47a, 0x47b, 0x47c, 0x47d, 0 };
const TChar CHU_NORMAL_ALPHA[] = { 0x411, 0x412, 0x413, 0x414, 0x416, 0x417, 0x419, 0x41a, 0x41b, 0x41c, 0x41d, 0x41f, 0x420, 0x421, 0x422, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42a, 0x42c, 0x431, 0x432, 0x433, 0x434, 0x436, 0x437, 0x439, 0x43a, 0x43b, 0x43c, 0x43d, 0x43f, 0x440, 0x441, 0x442, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44a, 0x44c, 0x405, 0x455, 0x46e, 0x46f, 0x470, 0x471, 0x472, 0x473, 0x47e, 0x47f, 0 };
const TChar CHU_STRESS[] = { 0x300, 0x301, 0x302, 0x30f, 0x311, 0x483, 0 };
const TChar CZE_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0xc1, 0xe1, 0xc9, 0xe9, 0x11a, 0x11b, 0xcd, 0xed, 0xd3, 0xf3, 0xda, 0xfa, 0x16e, 0x16f, 0xdd, 0xfd, 0x52, 0x72, 0x158, 0x159, 0 };
const TChar CZE_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x10c, 0x10d, 0x10e, 0x10f, 0x147, 0x148, 0x160, 0x161, 0x164, 0x165, 0x17d, 0x17e, 0 };
const TChar ENG_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0 };
const TChar ENG_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0 };
const TChar EST_REQUIRED_ALPHA[] = { 0x41, 0x61, 0x45, 0x65, 0x49, 0x69, 0x4f, 0x6f, 0x55, 0x75, 0xd5, 0xf5, 0xc4, 0xe4, 0xd6, 0xf6, 0xdc, 0xfc, 0x59, 0x79, 0 };
const TChar EST_NORMAL_ALPHA[] = { 0x42, 0x62, 0x43, 0x63, 0x44, 0x64, 0x46, 0x66, 0x47, 0x67, 0x48, 0x68, 0x4a, 0x6a, 0x4b, 0x6b, 0x4c, 0x6c, 0x4d, 0x6d, 0x4e, 0x6e, 0x50, 0x70, 0x51, 0x71, 0x52, 0x72, 0x53, 0x73, 0x160, 0x161, 0x5a, 0x7a, 0x17d, 0x17e, 0x54, 0x74, 0x56, 0x76, 0x57, 0x77, 0x58, 0x78, 0 };
const TChar FIN_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0xc5, 0xe5, 0xc4, 0xe4, 0xd6, 0xf6, 0 };
const TChar FIN_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x160, 0x161, 0x17d, 0x17e, 0 };
const TChar FRA_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0xc0, 0xe0, 0xc2, 0xe2, 0xc8, 0xe8, 0xc9, 0xe9, 0xca, 0xea, 0xcb, 0xeb, 0xce, 0xee, 0xcf, 0xef, 0xd4, 0xf4, 0xd9, 0xf9, 0xdb, 0xfb, 0xdc, 0xfc, 0x178, 0xff, 0xc6, 0xe6, 0x152, 0x153, 0 };
const TChar FRA_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0xc7, 0xe7, 0 };
const TChar GEO_REQUIRED_ALPHA[] = { 0x10d0, 0x10d4, 0x10f1, 0x10d8, 0x10f2, 0x10dd, 0x10e3, 0x10ef, 0 };
const TChar GEO_NORMAL_ALPHA[] = { 0x10d1, 0x10d2, 0x10d3, 0x10d5, 0x10d6, 0x10d7, 0x10d8, 0x10d9, 0x10da, 0x10db, 0x10dc, 0x10de, 0x10df, 0x10e0, 0x10e1, 0x10e2, 0x10f3, 0x10e4, 0x10e5, 0x10e6, 0x10e7, 0x10e8, 0x10e9, 0x10ea, 0x10eb, 0x10ec, 0x10ed, 0x10ee, 0x10f0, 0x10f5, 0x10f6, 0 };
const TChar GER_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0xc4, 0xe4, 0xd6, 0xf6, 0xdc, 0xfc, 0 };
const TChar GER_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0xdf, 0 };
const TChar TGERMANCONVERTER_AUX_FROM[] = { 0x2019, 0 };
const TChar TGERMANCONVERTER_AUX_TO[] = { 0x27, 0 };
const TChar TGERMANCONVERTER_AUX_ADV_REPLACE_0[] = { 0x61, 0x65, 0 };
const TChar TGERMANCONVERTER_AUX_ADV_REPLACE_1[] = { 0x75, 0x65, 0 };
const TChar TGERMANCONVERTER_AUX_ADV_REPLACE_2[] = { 0x73, 0x73, 0 };
const TChar TGERMANCONVERTER_AUX_ADV_REPLACE_3[] = { 0x6f, 0x65, 0 };
const TChar TGERMANCONVERTER_AUX_ADV_FROM[] = { 0xe4, 0xfc, 0xdf, 0xf6, 0 };
const TChar* TGERMANCONVERTER_AUX_ADV_TO[] = { TGERMANCONVERTER_AUX_ADV_REPLACE_0, TGERMANCONVERTER_AUX_ADV_REPLACE_1, TGERMANCONVERTER_AUX_ADV_REPLACE_2, TGERMANCONVERTER_AUX_ADV_REPLACE_3, 0 };
struct TGermanConverter: public TTr {
    TGermanConverter()
        : TTr(TGERMANCONVERTER_AUX_FROM, TGERMANCONVERTER_AUX_TO, NULL, TGERMANCONVERTER_AUX_ADV_FROM, TGERMANCONVERTER_AUX_ADV_TO)
    {}
};
const TChar GRE_REQUIRED_ALPHA[] = { 0x386, 0x388, 0x38a, 0x38c, 0x38e, 0x390, 0x3aa, 0x3ab, 0x3b0, 0x3ca, 0x3cb, 0x391, 0x3b1, 0x395, 0x3b5, 0x397, 0x3b7, 0x399, 0x3b9, 0x39f, 0x3bf, 0x3a5, 0x3c5, 0x3a9, 0x3c9, 0x3ac, 0x3ce, 0x3cd, 0x3ad, 0x3af, 0x3cc, 0x3ae, 0 };
const TChar GRE_NORMAL_ALPHA[] = { 0x389, 0x38f, 0x392, 0x3b2, 0x393, 0x3b3, 0x394, 0x3b4, 0x396, 0x3b6, 0x398, 0x3b8, 0x39a, 0x3ba, 0x39b, 0x3bb, 0x39c, 0x3bc, 0x39d, 0x3bd, 0x39e, 0x3be, 0x3a0, 0x3c0, 0x3a1, 0x3c1, 0x3a3, 0x3c3, 0x3c2, 0x3a4, 0x3c4, 0x3a6, 0x3c6, 0x3a7, 0x3c7, 0x3a8, 0x3c8, 0 };
const TChar ITA_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0xc0, 0xe0, 0xc1, 0xe1, 0xc8, 0xe8, 0xc9, 0xe9, 0xcc, 0xec, 0xcd, 0xed, 0xd2, 0xf2, 0xd3, 0xf3, 0xd9, 0xf9, 0xda, 0xfa, 0 };
const TChar ITA_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0 };
const TChar TITALIANCONVERTER_AUX_FROM[] = { 0xc1, 0xc0, 0xc9, 0xc8, 0xcd, 0xcc, 0xce, 0xd3, 0xd2, 0xd9, 0xda, 0xe1, 0xe0, 0xe9, 0xe8, 0xed, 0xec, 0xee, 0xf3, 0xf2, 0xf9, 0xfa, 0 };
const TChar TITALIANCONVERTER_AUX_TO[] = { 0x41, 0x41, 0x45, 0x45, 0x49, 0x49, 0x49, 0x4f, 0x4f, 0x55, 0x55, 0x61, 0x61, 0x65, 0x65, 0x69, 0x69, 0x69, 0x6f, 0x6f, 0x75, 0x75, 0 };
struct TItalianConverter: public TTr {
    TItalianConverter()
        : TTr(TITALIANCONVERTER_AUX_FROM, TITALIANCONVERTER_AUX_TO, NULL, NULL, NULL)
    {}
};
const size_t JAPANESE_REQUIRED_ALPHA_SIZE = 28358;
const TChar KAZ_REQUIRED_ALPHA[] = { 0x410, 0x415, 0x418, 0x41e, 0x423, 0x42b, 0x42d, 0x42e, 0x42f, 0x401, 0x430, 0x435, 0x438, 0x43e, 0x443, 0x44b, 0x44d, 0x44e, 0x44f, 0x451, 0 };
const TChar KAZ_NORMAL_ALPHA[] = { 0x411, 0x412, 0x413, 0x414, 0x416, 0x417, 0x419, 0x41a, 0x41b, 0x41c, 0x41d, 0x41f, 0x420, 0x421, 0x422, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42a, 0x42c, 0x431, 0x432, 0x433, 0x434, 0x436, 0x437, 0x439, 0x43a, 0x43b, 0x43c, 0x43d, 0x43f, 0x440, 0x441, 0x442, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44a, 0x44c, 0x492, 0x493, 0x4b0, 0x4b1, 0x4e8, 0x4e9, 0x4a2, 0x4a3, 0x49a, 0x49b, 0x4ba, 0x4bb, 0x4ae, 0x4af, 0x406, 0x456, 0x4d8, 0x4d9, 0 };
const TChar TKAZAKHDIACRITICSMAP_AUX_0[] = { 0x430, 0x4d9, 0 };
const TChar TKAZAKHDIACRITICSMAP_AUX_1[] = { 0x433, 0x493, 0 };
const TChar TKAZAKHDIACRITICSMAP_AUX_2[] = { 0x438, 0x456, 0 };
const TChar TKAZAKHDIACRITICSMAP_AUX_3[] = { 0x43a, 0x49b, 0 };
const TChar TKAZAKHDIACRITICSMAP_AUX_4[] = { 0x43d, 0x4a3, 0 };
const TChar TKAZAKHDIACRITICSMAP_AUX_5[] = { 0x43e, 0x4e9, 0 };
const TChar TKAZAKHDIACRITICSMAP_AUX_6[] = { 0x443, 0x4af, 0x4b1, 0 };
const TChar TKAZAKHDIACRITICSMAP_AUX_7[] = { 0x445, 0x4bb, 0 };
class TKazakhDiacriticsMap: public TDiacriticsMap {
public:
    TKazakhDiacriticsMap() {
        Add(TKAZAKHDIACRITICSMAP_AUX_0);
Add(TKAZAKHDIACRITICSMAP_AUX_1);
Add(TKAZAKHDIACRITICSMAP_AUX_2);
Add(TKAZAKHDIACRITICSMAP_AUX_3);
Add(TKAZAKHDIACRITICSMAP_AUX_4);
Add(TKAZAKHDIACRITICSMAP_AUX_5);
Add(TKAZAKHDIACRITICSMAP_AUX_6);
Add(TKAZAKHDIACRITICSMAP_AUX_7);

    }
};
const size_t KOREAN_REQUIRED_ALPHA_SIZE = 39805;
const TChar LAV_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0x100, 0x101, 0x112, 0x113, 0x12a, 0x12b, 0x16a, 0x16b, 0 };
const TChar LAV_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x10c, 0x10d, 0x112, 0x113, 0x122, 0x123, 0x136, 0x137, 0x13b, 0x13c, 0x145, 0x146, 0x160, 0x161, 0x17d, 0x17e, 0 };
const TChar LIT_REQUIRED_ALPHA[] = { 0x41, 0x61, 0x104, 0x105, 0x45, 0x65, 0x118, 0x119, 0x116, 0x117, 0x49, 0x69, 0x12e, 0x12f, 0x59, 0x79, 0x4a, 0x6a, 0x4f, 0x6f, 0x55, 0x75, 0x172, 0x173, 0x16a, 0x16b, 0 };
const TChar LIT_NORMAL_ALPHA[] = { 0x42, 0x62, 0x43, 0x63, 0x10c, 0x10d, 0x44, 0x64, 0x46, 0x66, 0x47, 0x67, 0x48, 0x68, 0x4b, 0x6b, 0x4c, 0x6c, 0x4d, 0x6d, 0x4e, 0x6e, 0x50, 0x70, 0x52, 0x72, 0x53, 0x73, 0x160, 0x161, 0x54, 0x74, 0x56, 0x76, 0x5a, 0x7a, 0x17d, 0x17e, 0 };
const TChar POL_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0x104, 0x105, 0x118, 0x119, 0xd3, 0xf3, 0 };
const TChar POL_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x106, 0x107, 0x141, 0x142, 0x143, 0x144, 0x15a, 0x15b, 0x179, 0x17a, 0x17b, 0x17c, 0 };
const TChar POR_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0xc0, 0xe0, 0xc1, 0xe1, 0xc2, 0xe2, 0xc3, 0xe3, 0xc9, 0xe9, 0xca, 0xea, 0xcd, 0xed, 0xd3, 0xf3, 0xd4, 0xf4, 0xd5, 0xf5, 0xda, 0xfa, 0 };
const TChar POR_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0xc7, 0xe7, 0 };
const TChar TPORTUGUESECONVERTER_AUX_FROM[] = { 0x2019, 0xc1, 0xc0, 0xc3, 0xc2, 0xc7, 0xc9, 0xca, 0xcd, 0xd3, 0xd5, 0xd4, 0xda, 0xe1, 0xe0, 0xe3, 0xe2, 0xe7, 0xe9, 0xeb, 0xed, 0xf3, 0xf5, 0xf4, 0xfa, 0 };
const TChar TPORTUGUESECONVERTER_AUX_TO[] = { 0x27, 0x41, 0x41, 0x41, 0x41, 0x43, 0x45, 0x45, 0x49, 0x4f, 0x4f, 0x4f, 0x55, 0x61, 0x61, 0x61, 0x61, 0x63, 0x65, 0x65, 0x69, 0x6f, 0x6f, 0x6f, 0x75, 0 };
struct TPortugueseConverter: public TTr {
    TPortugueseConverter()
        : TTr(TPORTUGUESECONVERTER_AUX_FROM, TPORTUGUESECONVERTER_AUX_TO, NULL, NULL, NULL)
    {}
};
const TChar RUM_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0x102, 0x103, 0xc2, 0xe2, 0xce, 0xee, 0 };
const TChar RUM_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x218, 0x219, 0x15e, 0x15f, 0x21a, 0x21b, 0x162, 0x163, 0 };
const TChar TROMANIANDERENYXER_AUX_FROM[] = { 0x219, 0x218, 0x21b, 0x21a, 0 };
const TChar TROMANIANDERENYXER_AUX_TO[] = { 0x15f, 0x15e, 0x163, 0x162, 0 };
const TChar TROMANIANDERENYXER_AUX_KILL[] = { 0x301, 0 };
struct TRomanianDerenyxer: public TTr {
    TRomanianDerenyxer()
        : TTr(TROMANIANDERENYXER_AUX_FROM, TROMANIANDERENYXER_AUX_TO, TROMANIANDERENYXER_AUX_KILL, NULL, NULL)
    {}
};
const TChar TROMANIANPRECONVERTER_AUX_FROM[] = { 0x181, 0x1e04, 0x2c00, 0x408, 0x1f0a, 0x20c, 0x2cac, 0x191, 0x1e14, 0x116, 0x2c18, 0x1f1a, 0x39d, 0x21c, 0x51e, 0x24bc, 0x1e5a, 0x1e24, 0x2126, 0x2c28, 0x10c0, 0x106, 0x22c, 0x1b1, 0x1e34, 0x136, 0x10bb, 0x1f3a, 0x53e, 0x4c3, 0xa644, 0x160, 0x41a, 0xcb, 0x1f4a, 0x24c, 0xa65c, 0x54e, 0x1d1, 0x50, 0x1f39, 0x1e62, 0xa654, 0x156, 0xdb, 0xa75a, 0xa780, 0x1e64, 0x2c10, 0x468, 0x1f6a, 0x1e4c, 0x2cbc, 0x1f1, 0x372, 0x1e74, 0x176, 0x478, 0x3fd, 0x2c03, 0x1e6a, 0x1e84, 0x186, 0x2c88, 0x1f8a, 0x1f6c, 0x2c13, 0x392, 0x1e94, 0x418, 0x2c98, 0x2c6e, 0x158, 0x2cc4, 0x10a0, 0x423, 0xff25, 0x1ea4, 0x1a6, 0x2ca8, 0x1f8b, 0x1faa, 0x24c1, 0x10b0, 0x1e72, 0xff35, 0x1eb4, 0x24b6, 0x10c5, 0x4b8, 0x10b2, 0x1fba, 0x141, 0xc0, 0x1ec4, 0x420, 0x549, 0x2cc8, 0x4b, 0x1fca, 0x2ccc, 0xd0, 0x411, 0xa722, 0x1ed4, 0x2cd8, 0x1fda, 0x2161, 0x2c63, 0x3e2, 0x1ee4, 0x1e6, 0x4e8, 0x126, 0xa66c, 0x1ef4, 0x428, 0x498, 0x4f8, 0x2c7e, 0x10ab, 0xa726, 0x4d4, 0x401, 0xff2a, 0x508, 0x18b, 0x1e0a, 0x1f8f, 0x40e, 0x110, 0x1e82, 0x4a2, 0x24c5, 0x518, 0x1e1a, 0x1f9f, 0x2c1e, 0x10a1, 0x120, 0x222, 0xa724, 0x3a7, 0x1e2a, 0x1faf, 0x2c2e, 0x10b1, 0x2c09, 0x232, 0xff34, 0x24b9, 0x538, 0x415, 0x1e3a, 0x10c1, 0xa68a, 0xa744, 0x46, 0x4c9, 0x548, 0x1cb, 0x1e4a, 0x38c, 0xd1, 0x150, 0xa754, 0x56, 0x1db, 0xa65a, 0xa664, 0x2160, 0xa73a, 0x216c, 0xa764, 0x2c70, 0xa66a, 0x46e, 0x170, 0xa692, 0xa77d, 0x3f7, 0x1e7a, 0x47e, 0xa784, 0x409, 0x15e, 0x1e8a, 0x24c3, 0x1f0f, 0x48e, 0x190, 0xa742, 0x2c19, 0x39c, 0x2c9e, 0x1a0, 0x10a6, 0x429, 0x212b, 0x1eaa, 0xff2f, 0x4ae, 0x533, 0x10b6, 0x13b, 0x49e, 0x23d, 0x24cb, 0x1f3f, 0x4be, 0x41, 0x2c21, 0x543, 0xa74a, 0xc6, 0x1eca, 0x24ce, 0x51, 0x553, 0x1ea2, 0x2cae, 0xa640, 0xd6, 0x1eda, 0x3dc, 0x1f5f, 0x4de, 0x1e0, 0x419, 0x4f2, 0x2c69, 0x216b, 0x1eea, 0x3ec, 0x1f6f, 0x4fc, 0x1e80, 0x2c29, 0xa752, 0x2c7f, 0x17b, 0x1efa, 0x4fe, 0x200, 0x1f2f, 0x102, 0x404, 0x1f89, 0x1e08, 0x556, 0x1f0e, 0x391, 0x210, 0x402, 0x2c08, 0x2c14, 0x1f99, 0x1e18, 0x51a, 0x19d, 0x3a1, 0x220, 0x122, 0x2c24, 0x10a7, 0x1fa9, 0x1e28, 0x206, 0xa72e, 0x230, 0x132, 0x10b7, 0x1fb9, 0x1e38, 0x53a, 0x2cb2, 0x24bf, 0xa73e, 0x1e02, 0x40a, 0xc7, 0x2c60, 0x1fc9, 0x1e48, 0x54a, 0x1cd, 0x4c, 0x24cf, 0xa74e, 0x152, 0x1fd9, 0x1e58, 0x20e, 0xa75e, 0x162, 0x464, 0x1fe9, 0xa668, 0x166, 0xa76e, 0x172, 0xa72c, 0x376, 0x1ff9, 0x1e78, 0x2cbe, 0xa77e, 0x426, 0x182, 0x2c84, 0x386, 0x1f09, 0xa688, 0x1f28, 0x216, 0x2c0f, 0x1f8e, 0x10c4, 0x494, 0x396, 0x1f19, 0x21b, 0x16e, 0x41f, 0x1f9e, 0x1a2, 0x2ca4, 0x3a6, 0xff29, 0x1ea8, 0x24c6, 0x10ac, 0x42f, 0x1fae, 0x1b2, 0x535, 0x4b4, 0xff39, 0x1eb8, 0x23b, 0x1e1e, 0x13d, 0x10bc, 0x545, 0x24c4, 0x47, 0x1f49, 0x1ec8, 0xcc, 0x422, 0x555, 0x2cd4, 0x57, 0x1f59, 0x1ed8, 0x2cce, 0xdc, 0x1e2, 0x4e4, 0x3e6, 0x1f69, 0x1ee8, 0x1e26, 0x216d, 0x2c6f, 0x1f2, 0x4f4, 0xff28, 0xa779, 0x1ef8, 0x17d, 0x2cb4, 0x42a, 0x504, 0x187, 0x2c80, 0x1f08, 0x4d6, 0x10c, 0x1e0e, 0x514, 0x197, 0x4ee, 0x1f18, 0x39b, 0x2c1a, 0x11c, 0xa684, 0x524, 0x1a7, 0x226, 0xa728, 0x3ab, 0x2c2a, 0x10ad, 0x12c, 0x407, 0x1e2e, 0x534, 0x1b7, 0x1e90, 0xff38, 0x2cde, 0x10bd, 0x40b, 0x1e3e, 0x42, 0x4c5, 0x544, 0x1c7, 0x246, 0xa748, 0xcd, 0x14c, 0x1e4e, 0x52, 0xa686, 0x554, 0x1d7, 0xa738, 0xa758, 0xdd, 0x15c, 0x2cc2, 0x1e5e, 0x2cb6, 0x403, 0x2c90, 0x1f68, 0x46a, 0x413, 0x1e6e, 0x370, 0x1f7, 0x1e8, 0x47a, 0x2c0c, 0xa694, 0x2c05, 0xa734, 0x1f88, 0x2c8a, 0xa68e, 0x2c15, 0x1fea, 0x1f98, 0x49a, 0x2c1b, 0x1e9e, 0x3a0, 0xff23, 0x1f9a, 0x425, 0x1fa8, 0xa646, 0x1ac, 0x4b6, 0x1eae, 0xff33, 0x1ef2, 0x1f48, 0x1fb8, 0x4ba, 0x1bc, 0x53f, 0x1ebe, 0x241, 0xc2, 0x147, 0x4a0, 0x19c, 0x1fc8, 0x1e42, 0x24ca, 0x4d, 0x2cba, 0x54f, 0x1ece, 0xd2, 0x1fd8, 0x2cda, 0x1ede, 0x3e0, 0xc3, 0x2167, 0x16c, 0x1fe8, 0x4ea, 0x1ec, 0x1eee, 0x2c75, 0x4a8, 0x1ff8, 0x4fa, 0x42b, 0x1efe, 0x400, 0x1e7e, 0x204, 0x506, 0x189, 0xff2d, 0xa656, 0x1f8d, 0x1e0c, 0x10e, 0x410, 0x502, 0x395, 0x214, 0x516, 0x1f9d, 0x1e1c, 0x2c04, 0x2c20, 0x10a3, 0xff22, 0x3a5, 0x224, 0x2cb0, 0x1a9, 0x1fad, 0x1e2c, 0x12e, 0x1f4b, 0x4a6, 0x10b3, 0xa732, 0x24be, 0x536, 0x24bb, 0xa65e, 0x1e3c, 0x40f, 0x2168, 0x10c3, 0x50a, 0x244, 0x546, 0x50e, 0x48, 0x4cb, 0xa64c, 0x40c, 0x539, 0xd3, 0xa76a, 0x24b8, 0x1d9, 0x58, 0x1e5c, 0x2164, 0x460, 0xa762, 0x2ceb, 0xa666, 0x1e6c, 0x216e, 0x470, 0x112, 0x1e30, 0xa650, 0xa768, 0x1e7c, 0x10c2, 0x414, 0x480, 0xa782, 0x2166, 0x2cc0, 0x2c0b, 0x38a, 0x1f0d, 0x1e8c, 0x18e, 0x490, 0x3a4, 0x2c8e, 0x41b, 0x39a, 0x1f1d, 0x2ca0, 0xff2b, 0x10a8, 0x2c2b, 0x3aa, 0x1f2d, 0x1eac, 0x1ae, 0x531, 0x4b0, 0x472, 0x24c8, 0x139, 0x10b8, 0x1f3d, 0x1ebc, 0x541, 0x24c0, 0x43, 0x24cd, 0xc8, 0x1f4d, 0x1ecc, 0x551, 0x2cd0, 0x53, 0xd8, 0x3da, 0x41c, 0x1edc, 0x1de, 0x4e0, 0x496, 0x4d0, 0x2169, 0x2c6b, 0x3ea, 0x1f6d, 0x1eec, 0x1ee, 0x4f0, 0x179, 0x3fa, 0x2c92, 0x1efc, 0x1fe, 0x500, 0x24e, 0x12a, 0x406, 0x108, 0x20a, 0x1f0c, 0x38f, 0x2c2c, 0x510, 0x193, 0x1e12, 0x4d8, 0x118, 0x21a, 0x1f1c, 0x39f, 0x184, 0x520, 0x2cdc, 0x1e22, 0x2c26, 0x10a9, 0x128, 0x22a, 0xff24, 0x1f2c, 0x512, 0x1b3, 0x2132, 0x10b9, 0x23a, 0x1f3c, 0x4c1, 0x540, 0x48a, 0x2ce0, 0xc9, 0x40d, 0x24a, 0x1f4c, 0x3cf, 0x4e, 0x550, 0x1d3, 0xa652, 0xd9, 0xff2e, 0x1e8e, 0xa75c, 0x196, 0xa662, 0x466, 0x168, 0x42d, 0xa76c, 0x492, 0x476, 0x178, 0x1f3e, 0x3ff, 0x2c01, 0xa682, 0x2c86, 0x1f8c, 0x2c11, 0x1e92, 0x394, 0x2c96, 0x198, 0x2c62, 0x1f9c, 0x421, 0xff32, 0x2c9a, 0x24c7, 0xff27, 0x2ca6, 0x2c1d, 0x1fac, 0x10ae, 0x1eb2, 0xff37, 0xa648, 0x1b8, 0x53b, 0x1fec, 0x1fbc, 0x10be, 0x143, 0x1ec2, 0x245, 0x2cc6, 0x49, 0x1c8, 0x54b, 0x1f6, 0x1fcc, 0xce, 0x1ed2, 0x2cd6, 0x59, 0x2c25, 0xde, 0x2163, 0x1ee2, 0x3e4, 0x4e6, 0xff36, 0x424, 0x552, 0x3f4, 0x4f6, 0x1f8, 0x1ffc, 0x2c06, 0x1e00, 0x2caa, 0x100, 0x389, 0x208, 0x10a, 0x2183, 0x1e10, 0x202, 0xa658, 0x399, 0x218, 0x11a, 0x2c1c, 0x1e54, 0x1e20, 0x522, 0xff26, 0x3a9, 0x228, 0x212a, 0x42c, 0x10af, 0xff3a, 0x532, 0x1b5, 0x24b7, 0xa736, 0x10a2, 0x10bf, 0x1e40, 0x1f2a, 0x542, 0x1c5, 0x44, 0x4c7, 0xa746, 0x248, 0x14a, 0xcf, 0x1e50, 0x2c23, 0x2162, 0x1d5, 0x54, 0xa756, 0x1f2e, 0x15a, 0x2c64, 0x1e60, 0x24ba, 0xa766, 0x2c0a, 0x16a, 0x46c, 0x1e70, 0x212, 0x1e68, 0x3f9, 0x47c, 0xa680, 0x216a, 0x397, 0x2c07, 0xa786, 0x2c16, 0x2c8c, 0x38e, 0xa690, 0x24c2, 0x417, 0x405, 0x1f6e, 0x2c9c, 0x39e, 0xff21, 0x1ea0, 0x10a4, 0x427, 0x4ac, 0xff31, 0x1eb0, 0x1f38, 0x10b4, 0x1ffa, 0x41e, 0x53d, 0x4bc, 0x474, 0x1ec0, 0x243, 0x2cca, 0x145, 0xc4, 0x1ca, 0x54d, 0x24cc, 0x4f, 0x1ed0, 0xd4, 0x4dc, 0x3de, 0x1ee0, 0x2165, 0x2c67, 0x14e, 0x1ea, 0x4ec, 0xa68c, 0x3ee, 0x1ef0, 0x4d2, 0x1fa, 0x1e88, 0x3fe, 0x2c02, 0x1eba, 0x104, 0x1e06, 0x11e, 0xa78b, 0x50c, 0x18f, 0xff2c, 0x393, 0x412, 0x114, 0x1e16, 0x1f9b, 0x42e, 0x51c, 0x19f, 0x21e, 0x3a3, 0x2c22, 0x10a5, 0x124, 0x130, 0x1fab, 0x1af, 0x22e, 0xff30, 0x1e32, 0x10b5, 0x134, 0x1e36, 0x1fbb, 0x24bd, 0x53c, 0x23e, 0xa740, 0x18a, 0xc5, 0x1e46, 0x1fcb, 0x4a, 0x4cd, 0x54c, 0x1cf, 0x48c, 0xa750, 0x2ce2, 0xd5, 0x154, 0x1e56, 0x1fdb, 0x5a, 0x1e4, 0xa760, 0x462, 0x164, 0x1e66, 0x1feb, 0x2ced, 0xa73c, 0x2c72, 0x1f5d, 0x174, 0x1e76, 0x2cb8, 0x1ffb, 0x2c94, 0xc1, 0x2c82, 0x2c17, 0x1e86, 0x388, 0x1f0b, 0x2c0d, 0x2c0e, 0xa642, 0x194, 0xa696, 0x219, 0x398, 0x1f1b, 0x41d, 0x2ca2, 0x1a4, 0x1ea6, 0x3a8, 0x1f2b, 0x10aa, 0x2c2d, 0x49c, 0x24c9, 0x4b2, 0x2c1f, 0x537, 0x1eb6, 0x1f3b, 0x10ba, 0x13f, 0xa64a, 0x45, 0x1c4, 0x547, 0x1ec6, 0x4c0, 0xca, 0x4da, 0xa74c, 0xa72a, 0x2cd2, 0x55, 0x1ed6, 0x3d8, 0x1f5b, 0xda, 0x1e44, 0x4a4, 0x416, 0xa64e, 0x4e2, 0x2c27, 0x1ee6, 0x3e8, 0x1f6b, 0x2c6d, 0x4aa, 0x216f, 0x1fc, 0x1f29, 0x1e52, 0x1f4, 0x1ef6, 0x2c12, 0xa77b, 0 };
const TChar TROMANIANPRECONVERTER_AUX_TO[] = { 0x253, 0x1e05, 0x2c30, 0x458, 0x1f02, 0x20d, 0x2cad, 0x192, 0x1e15, 0x117, 0x2c48, 0x1f12, 0x3bd, 0x21d, 0x51f, 0x24d6, 0x1e5b, 0x1e25, 0x3c9, 0x2c58, 0x2d20, 0x107, 0x22d, 0x28a, 0x1e35, 0x137, 0x2d1b, 0x1f32, 0x56e, 0x4c4, 0xa645, 0x161, 0x43a, 0xeb, 0x1f42, 0x24d, 0xa65d, 0x57e, 0x1d2, 0x70, 0x1f31, 0x1e63, 0xa655, 0x157, 0xfb, 0xa75b, 0xa781, 0x1e65, 0x2c40, 0x469, 0x1f62, 0x1e4d, 0x2cbd, 0x1f3, 0x373, 0x1e75, 0x177, 0x479, 0x37b, 0x2c33, 0x1e6b, 0x1e85, 0x254, 0x2c89, 0x1f82, 0x1f64, 0x2c43, 0x3b2, 0x1e95, 0x438, 0x2c99, 0x271, 0x159, 0x2cc5, 0x2d00, 0x443, 0xff45, 0x1ea5, 0x280, 0x2ca9, 0x1f83, 0x1fa2, 0x24db, 0x2d10, 0x1e73, 0xff55, 0x1eb5, 0x24d0, 0x2d25, 0x4b9, 0x2d12, 0x1f70, 0x142, 0xe0, 0x1ec5, 0x440, 0x579, 0x2cc9, 0x6b, 0x1f74, 0x2ccd, 0xf0, 0x431, 0xa723, 0x1ed5, 0x2cd9, 0x1f76, 0x2171, 0x1d7d, 0x3e3, 0x1ee5, 0x1e7, 0x4e9, 0x127, 0xa66d, 0x1ef5, 0x448, 0x499, 0x4f9, 0x23f, 0x2d0b, 0xa727, 0x4d5, 0x451, 0xff4a, 0x509, 0x18c, 0x1e0b, 0x1f87, 0x45e, 0x111, 0x1e83, 0x4a3, 0x24df, 0x519, 0x1e1b, 0x1f97, 0x2c4e, 0x2d01, 0x121, 0x223, 0xa725, 0x3c7, 0x1e2b, 0x1fa7, 0x2c5e, 0x2d11, 0x2c39, 0x233, 0xff54, 0x24d3, 0x568, 0x435, 0x1e3b, 0x2d21, 0xa68b, 0xa745, 0x66, 0x4ca, 0x578, 0x1cc, 0x1e4b, 0x3cc, 0xf1, 0x151, 0xa755, 0x76, 0x1dc, 0xa65b, 0xa665, 0x2170, 0xa73b, 0x217c, 0xa765, 0x252, 0xa66b, 0x46f, 0x171, 0xa693, 0x1d79, 0x3f8, 0x1e7b, 0x47f, 0xa785, 0x459, 0x15f, 0x1e8b, 0x24dd, 0x1f07, 0x48f, 0x25b, 0xa743, 0x2c49, 0x3bc, 0x2c9f, 0x1a1, 0x2d06, 0x449, 0xe5, 0x1eab, 0xff4f, 0x4af, 0x563, 0x2d16, 0x13c, 0x49f, 0x19a, 0x24e5, 0x1f37, 0x4bf, 0x61, 0x2c51, 0x573, 0xa74b, 0xe6, 0x1ecb, 0x24e8, 0x71, 0x583, 0x1ea3, 0x2caf, 0xa641, 0xf6, 0x1edb, 0x3dd, 0x1f57, 0x4df, 0x1e1, 0x439, 0x4f3, 0x2c6a, 0x217b, 0x1eeb, 0x3ed, 0x1f67, 0x4fd, 0x1e81, 0x2c59, 0xa753, 0x240, 0x17c, 0x1efb, 0x4ff, 0x201, 0x1f27, 0x103, 0x454, 0x1f81, 0x1e09, 0x586, 0x1f06, 0x3b1, 0x211, 0x452, 0x2c38, 0x2c44, 0x1f91, 0x1e19, 0x51b, 0x272, 0x3c1, 0x19e, 0x123, 0x2c54, 0x2d07, 0x1fa1, 0x1e29, 0x207, 0xa72f, 0x231, 0x133, 0x2d17, 0x1fb1, 0x1e39, 0x56a, 0x2cb3, 0x24d9, 0xa73f, 0x1e03, 0x45a, 0xe7, 0x2c61, 0x1f73, 0x1e49, 0x57a, 0x1ce, 0x6c, 0x24e9, 0xa74f, 0x153, 0x1fd1, 0x1e59, 0x20f, 0xa75f, 0x163, 0x465, 0x1fe1, 0xa669, 0x167, 0xa76f, 0x173, 0xa72d, 0x377, 0x1f79, 0x1e79, 0x2cbf, 0xa77f, 0x446, 0x183, 0x2c85, 0x3ac, 0x1f01, 0xa689, 0x1f20, 0x217, 0x2c3f, 0x1f86, 0x2d24, 0x495, 0x3b6, 0x1f11, 0x163, 0x16f, 0x43f, 0x1f96, 0x1a3, 0x2ca5, 0x3c6, 0xff49, 0x1ea9, 0x24e0, 0x2d0c, 0x44f, 0x1fa6, 0x28b, 0x565, 0x4b5, 0xff59, 0x1eb9, 0x23c, 0x1e1f, 0x13e, 0x2d1c, 0x575, 0x24de, 0x67, 0x1f41, 0x1ec9, 0xec, 0x442, 0x585, 0x2cd5, 0x77, 0x1f51, 0x1ed9, 0x2ccf, 0xfc, 0x1e3, 0x4e5, 0x3e7, 0x1f61, 0x1ee9, 0x1e27, 0x217d, 0x250, 0x1f3, 0x4f5, 0xff48, 0xa77a, 0x1ef9, 0x17e, 0x2cb5, 0x44a, 0x505, 0x188, 0x2c81, 0x1f00, 0x4d7, 0x10d, 0x1e0f, 0x515, 0x268, 0x4ef, 0x1f10, 0x3bb, 0x2c4a, 0x11d, 0xa685, 0x525, 0x1a8, 0x227, 0xa729, 0x3cb, 0x2c5a, 0x2d0d, 0x12d, 0x457, 0x1e2f, 0x564, 0x292, 0x1e91, 0xff58, 0x2cdf, 0x2d1d, 0x45b, 0x1e3f, 0x62, 0x4c6, 0x574, 0x1c9, 0x247, 0xa749, 0xed, 0x14d, 0x1e4f, 0x72, 0xa687, 0x584, 0x1d8, 0xa739, 0xa759, 0xfd, 0x15d, 0x2cc3, 0x1e5f, 0x2cb7, 0x453, 0x2c91, 0x1f60, 0x46b, 0x433, 0x1e6f, 0x371, 0x1bf, 0x1e9, 0x47b, 0x2c3c, 0xa695, 0x2c35, 0xa735, 0x1f80, 0x2c8b, 0xa68f, 0x2c45, 0x1f7a, 0x1f90, 0x49b, 0x2c4b, 0xdf, 0x3c0, 0xff43, 0x1f92, 0x445, 0x1fa0, 0xa647, 0x1ad, 0x4b7, 0x1eaf, 0xff53, 0x1ef3, 0x1f40, 0x1fb0, 0x4bb, 0x1bd, 0x56f, 0x1ebf, 0x242, 0xe2, 0x148, 0x4a1, 0x26f, 0x1f72, 0x1e43, 0x24e4, 0x6d, 0x2cbb, 0x57f, 0x1ecf, 0xf2, 0x1fd0, 0x2cdb, 0x1edf, 0x3e1, 0xe3, 0x2177, 0x16d, 0x1fe0, 0x4eb, 0x1ed, 0x1eef, 0x2c76, 0x4a9, 0x1f78, 0x4fb, 0x44b, 0x1eff, 0x450, 0x1e7f, 0x205, 0x507, 0x256, 0xff4d, 0xa657, 0x1f85, 0x1e0d, 0x10f, 0x430, 0x503, 0x3b5, 0x215, 0x517, 0x1f95, 0x1e1d, 0x2c34, 0x2c50, 0x2d03, 0xff42, 0x3c5, 0x225, 0x2cb1, 0x283, 0x1fa5, 0x1e2d, 0x12f, 0x1f43, 0x4a7, 0x2d13, 0xa733, 0x24d8, 0x566, 0x24d5, 0xa65f, 0x1e3d, 0x45f, 0x2178, 0x2d23, 0x50b, 0x289, 0x576, 0x50f, 0x68, 0x4cc, 0xa64d, 0x45c, 0x569, 0xf3, 0xa76b, 0x24d2, 0x1da, 0x78, 0x1e5d, 0x2174, 0x461, 0xa763, 0x2cec, 0xa667, 0x1e6d, 0x217e, 0x471, 0x113, 0x1e31, 0xa651, 0xa769, 0x1e7d, 0x2d22, 0x434, 0x481, 0xa783, 0x2176, 0x2cc1, 0x2c3b, 0x3af, 0x1f05, 0x1e8d, 0x1dd, 0x491, 0x3c4, 0x2c8f, 0x43b, 0x3ba, 0x1f15, 0x2ca1, 0xff4b, 0x2d08, 0x2c5b, 0x3ca, 0x1f25, 0x1ead, 0x288, 0x561, 0x4b1, 0x473, 0x24e2, 0x13a, 0x2d18, 0x1f35, 0x1ebd, 0x571, 0x24da, 0x63, 0x24e7, 0xe8, 0x1f45, 0x1ecd, 0x581, 0x2cd1, 0x73, 0xf8, 0x3db, 0x43c, 0x1edd, 0x1df, 0x4e1, 0x497, 0x4d1, 0x2179, 0x2c6c, 0x3eb, 0x1f65, 0x1eed, 0x1ef, 0x4f1, 0x17a, 0x3fb, 0x2c93, 0x1efd, 0x1ff, 0x501, 0x24f, 0x12b, 0x456, 0x109, 0x20b, 0x1f04, 0x3ce, 0x2c5c, 0x511, 0x260, 0x1e13, 0x4d9, 0x119, 0x163, 0x1f14, 0x3bf, 0x185, 0x521, 0x2cdd, 0x1e23, 0x2c56, 0x2d09, 0x129, 0x22b, 0xff44, 0x1f24, 0x513, 0x1b4, 0x214e, 0x2d19, 0x2c65, 0x1f34, 0x4c2, 0x570, 0x48b, 0x2ce1, 0xe9, 0x45d, 0x24b, 0x1f44, 0x3d7, 0x6e, 0x580, 0x1d4, 0xa653, 0xf9, 0xff4e, 0x1e8f, 0xa75d, 0x269, 0xa663, 0x467, 0x169, 0x44d, 0xa76d, 0x493, 0x477, 0xff, 0x1f36, 0x37d, 0x2c31, 0xa683, 0x2c87, 0x1f84, 0x2c41, 0x1e93, 0x3b4, 0x2c97, 0x199, 0x26b, 0x1f94, 0x441, 0xff52, 0x2c9b, 0x24e1, 0xff47, 0x2ca7, 0x2c4d, 0x1fa4, 0x2d0e, 0x1eb3, 0xff57, 0xa649, 0x1b9, 0x56b, 0x1fe5, 0x1fb3, 0x2d1e, 0x144, 0x1ec3, 0x28c, 0x2cc7, 0x69, 0x1c9, 0x57b, 0x195, 0x1fc3, 0xee, 0x1ed3, 0x2cd7, 0x79, 0x2c55, 0xfe, 0x2173, 0x1ee3, 0x3e5, 0x4e7, 0xff56, 0x444, 0x582, 0x3b8, 0x4f7, 0x1f9, 0x1ff3, 0x2c36, 0x1e01, 0x2cab, 0x101, 0x3ae, 0x209, 0x10b, 0x2184, 0x1e11, 0x203, 0xa659, 0x3b9, 0x15f, 0x11b, 0x2c4c, 0x1e55, 0x1e21, 0x523, 0xff46, 0x3c9, 0x229, 0x6b, 0x44c, 0x2d0f, 0xff5a, 0x562, 0x1b6, 0x24d1, 0xa737, 0x2d02, 0x2d1f, 0x1e41, 0x1f22, 0x572, 0x1c6, 0x64, 0x4c8, 0xa747, 0x249, 0x14b, 0xef, 0x1e51, 0x2c53, 0x2172, 0x1d6, 0x74, 0xa757, 0x1f26, 0x15b, 0x27d, 0x1e61, 0x24d4, 0xa767, 0x2c3a, 0x16b, 0x46d, 0x1e71, 0x213, 0x1e69, 0x3f2, 0x47d, 0xa681, 0x217a, 0x3b7, 0x2c37, 0xa787, 0x2c46, 0x2c8d, 0x3cd, 0xa691, 0x24dc, 0x437, 0x455, 0x1f66, 0x2c9d, 0x3be, 0xff41, 0x1ea1, 0x2d04, 0x447, 0x4ad, 0xff51, 0x1eb1, 0x1f30, 0x2d14, 0x1f7c, 0x43e, 0x56d, 0x4bd, 0x475, 0x1ec1, 0x180, 0x2ccb, 0x146, 0xe4, 0x1cc, 0x57d, 0x24e6, 0x6f, 0x1ed1, 0xf4, 0x4dd, 0x3df, 0x1ee1, 0x2175, 0x2c68, 0x14f, 0x1eb, 0x4ed, 0xa68d, 0x3ef, 0x1ef1, 0x4d3, 0x1fb, 0x1e89, 0x37c, 0x2c32, 0x1ebb, 0x105, 0x1e07, 0x11f, 0xa78c, 0x50d, 0x259, 0xff4c, 0x3b3, 0x432, 0x115, 0x1e17, 0x1f93, 0x44e, 0x51d, 0x275, 0x21f, 0x3c3, 0x2c52, 0x2d05, 0x125, 0x69, 0x1fa3, 0x1b0, 0x22f, 0xff50, 0x1e33, 0x2d15, 0x135, 0x1e37, 0x1f71, 0x24d7, 0x56c, 0x2c66, 0xa741, 0x257, 0xe5, 0x1e47, 0x1f75, 0x6a, 0x4ce, 0x57c, 0x1d0, 0x48d, 0xa751, 0x2ce3, 0xf5, 0x155, 0x1e57, 0x1f77, 0x7a, 0x1e5, 0xa761, 0x463, 0x165, 0x1e67, 0x1f7b, 0x2cee, 0xa73d, 0x2c73, 0x1f55, 0x175, 0x1e77, 0x2cb9, 0x1f7d, 0x2c95, 0xe1, 0x2c83, 0x2c47, 0x1e87, 0x3ad, 0x1f03, 0x2c3d, 0x2c3e, 0xa643, 0x263, 0xa697, 0x15f, 0x3b8, 0x1f13, 0x43d, 0x2ca3, 0x1a5, 0x1ea7, 0x3c8, 0x1f23, 0x2d0a, 0x2c5d, 0x49d, 0x24e3, 0x4b3, 0x2c4f, 0x567, 0x1eb7, 0x1f33, 0x2d1a, 0x140, 0xa64b, 0x65, 0x1c6, 0x577, 0x1ec7, 0x4cf, 0xea, 0x4db, 0xa74d, 0xa72b, 0x2cd3, 0x75, 0x1ed7, 0x3d9, 0x1f53, 0xfa, 0x1e45, 0x4a5, 0x436, 0xa64f, 0x4e3, 0x2c57, 0x1ee7, 0x3e9, 0x1f63, 0x251, 0x4ab, 0x217f, 0x1fd, 0x1f21, 0x1e53, 0x1f5, 0x1ef7, 0x2c42, 0xa77c, 0 };
struct TRomanianPreConverter: public TTr {
    TRomanianPreConverter()
        : TTr(TROMANIANPRECONVERTER_AUX_FROM, TROMANIANPRECONVERTER_AUX_TO, NULL, NULL, NULL)
    {}
};
const TChar RUS_REQUIRED_ALPHA[] = { 0x410, 0x415, 0x418, 0x41e, 0x423, 0x42b, 0x42d, 0x42e, 0x42f, 0x401, 0x430, 0x435, 0x438, 0x43e, 0x443, 0x44b, 0x44d, 0x44e, 0x44f, 0x451, 0 };
const TChar RUS_NORMAL_ALPHA[] = { 0x411, 0x412, 0x413, 0x414, 0x416, 0x417, 0x419, 0x41a, 0x41b, 0x41c, 0x41d, 0x41f, 0x420, 0x421, 0x422, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42a, 0x42c, 0x431, 0x432, 0x433, 0x434, 0x436, 0x437, 0x439, 0x43a, 0x43b, 0x43c, 0x43d, 0x43f, 0x440, 0x441, 0x442, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44a, 0x44c, 0x406, 0x456, 0x462, 0x463, 0x472, 0x473, 0x474, 0x475, 0 };
const TChar RUS_BASIC_ALPHA[] = { 0x411, 0x412, 0x413, 0x414, 0x416, 0x417, 0x419, 0x41a, 0x41b, 0x41c, 0x41d, 0x41f, 0x420, 0x421, 0x422, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42a, 0x42c, 0x431, 0x432, 0x433, 0x434, 0x436, 0x437, 0x439, 0x43a, 0x43b, 0x43c, 0x43d, 0x43f, 0x440, 0x441, 0x442, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44a, 0x44c, 0 };
const TChar SPA_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0xc1, 0xe1, 0xc9, 0xe9, 0xcd, 0xed, 0xd3, 0xf3, 0xda, 0xfa, 0xdc, 0xfc, 0 };
const TChar SPA_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0xd1, 0xf1, 0 };
const TChar TSPANISHCONVERTER_AUX_FROM[] = { 0xc1, 0xe1, 0xda, 0xc9, 0xed, 0xcd, 0xd3, 0xdc, 0xe9, 0xf3, 0xfa, 0xfc, 0 };
const TChar TSPANISHCONVERTER_AUX_TO[] = { 0x41, 0x61, 0x55, 0x45, 0x69, 0x49, 0x4f, 0x55, 0x65, 0x6f, 0x75, 0x75, 0 };
struct TSpanishConverter: public TTr {
    TSpanishConverter()
        : TTr(TSPANISHCONVERTER_AUX_FROM, TSPANISHCONVERTER_AUX_TO, NULL, NULL, NULL)
    {}
};
const TChar TAT_REQUIRED_ALPHA[] = { 0x410, 0x415, 0x418, 0x41e, 0x423, 0x42b, 0x42d, 0x42e, 0x42f, 0x401, 0x430, 0x435, 0x438, 0x43e, 0x443, 0x44b, 0x44d, 0x44e, 0x44f, 0x451, 0 };
const TChar TAT_NORMAL_ALPHA[] = { 0x411, 0x412, 0x413, 0x414, 0x416, 0x417, 0x419, 0x41a, 0x41b, 0x41c, 0x41d, 0x41f, 0x420, 0x421, 0x422, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42a, 0x42c, 0x431, 0x432, 0x433, 0x434, 0x436, 0x437, 0x439, 0x43a, 0x43b, 0x43c, 0x43d, 0x43f, 0x440, 0x441, 0x442, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44a, 0x44c, 0x4e8, 0x4e9, 0x4a2, 0x4a3, 0x4ba, 0x4bb, 0x4ae, 0x4af, 0x496, 0x497, 0x4d8, 0x4d9, 0 };
const TChar TUR_REQUIRED_ALPHA[] = { 0x41, 0x45, 0x49, 0x4f, 0x55, 0x61, 0x65, 0x69, 0x6f, 0x75, 0xc2, 0xe2, 0x130, 0x131, 0xce, 0xee, 0xd6, 0xf6, 0xdb, 0xfb, 0xdc, 0xfc, 0 };
const TChar TUR_NORMAL_ALPHA[] = { 0x42, 0x43, 0x44, 0x46, 0x47, 0x48, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x50, 0x51, 0x52, 0x53, 0x54, 0x56, 0x57, 0x58, 0x59, 0x5a, 0x62, 0x63, 0x64, 0x66, 0x67, 0x68, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x70, 0x71, 0x72, 0x73, 0x74, 0x76, 0x77, 0x78, 0x79, 0x7a, 0xc7, 0xe7, 0x11e, 0x11f, 0x15e, 0x15f, 0 };
const TChar TTURKISHPRELOWER_AUX_FROM[] = { 0x49, 0x130, 0 };
const TChar TTURKISHPRELOWER_AUX_TO[] = { 0x131, 0x69, 0 };
struct TTurkishPreLower: public TTr {
    TTurkishPreLower()
        : TTr(TTURKISHPRELOWER_AUX_FROM, TTURKISHPRELOWER_AUX_TO, NULL, NULL, NULL)
    {}
};
const TChar TTURKISHPREUPPER_AUX_FROM[] = { 0x131, 0x69, 0 };
const TChar TTURKISHPREUPPER_AUX_TO[] = { 0x49, 0x130, 0 };
struct TTurkishPreUpper: public TTr {
    TTurkishPreUpper()
        : TTr(TTURKISHPREUPPER_AUX_FROM, TTURKISHPREUPPER_AUX_TO, NULL, NULL, NULL)
    {}
};
const TChar TTURKISHPRECONVERTER_AUX_FROM[] = { 0x181, 0x1e04, 0x2c00, 0x408, 0x1f0a, 0x20c, 0x2cac, 0x191, 0x1e14, 0x116, 0x2c18, 0x1f1a, 0x39d, 0x21c, 0x51e, 0x24bc, 0x1e5a, 0x1e24, 0x2126, 0x2c28, 0x10c0, 0x106, 0x22c, 0x1b1, 0x1e34, 0x136, 0x10bb, 0x1f3a, 0x53e, 0x4c3, 0xa644, 0x160, 0x41a, 0xcb, 0x1f4a, 0x24c, 0xa65c, 0x54e, 0x1d1, 0x50, 0x1f39, 0x1e62, 0xa654, 0x156, 0xdb, 0xa75a, 0xa780, 0x1e64, 0x2c10, 0x468, 0x1f6a, 0x1e4c, 0x2cbc, 0x1f1, 0x372, 0x1e74, 0x176, 0x478, 0x3fd, 0x2c03, 0x1e6a, 0x1e84, 0x186, 0x2c88, 0x1f8a, 0x1f6c, 0x2c13, 0x392, 0x1e94, 0x418, 0x2c98, 0x2c6e, 0x158, 0x2cc4, 0x10a0, 0x423, 0xff25, 0x1ea4, 0x1a6, 0x2ca8, 0x1f8b, 0x1faa, 0x24c1, 0x10b0, 0x1e72, 0xff35, 0x1eb4, 0x24b6, 0x10c5, 0x4b8, 0x10b2, 0x1fba, 0x141, 0xc0, 0x1ec4, 0x420, 0x549, 0x2cc8, 0x4b, 0x1fca, 0x2ccc, 0xd0, 0x411, 0xa722, 0x1ed4, 0x2cd8, 0x1fda, 0x2161, 0x2c63, 0x3e2, 0x1ee4, 0x1e6, 0x4e8, 0x126, 0xa66c, 0x1ef4, 0x428, 0x498, 0x4f8, 0x2c7e, 0x10ab, 0xa726, 0x4d4, 0x401, 0xff2a, 0x508, 0x18b, 0x1e0a, 0x1f8f, 0x40e, 0x110, 0x1e82, 0x4a2, 0x24c5, 0x518, 0x1e1a, 0x1f9f, 0x2c1e, 0x10a1, 0x120, 0x222, 0xa724, 0x3a7, 0x1e2a, 0x1faf, 0x2c2e, 0x10b1, 0x2c09, 0x232, 0xff34, 0x24b9, 0x538, 0x415, 0x1e3a, 0x10c1, 0xa68a, 0xa744, 0x46, 0x4c9, 0x548, 0x1cb, 0x1e4a, 0x38c, 0xd1, 0x150, 0xa754, 0x56, 0x1db, 0xa65a, 0xa664, 0x2160, 0xa73a, 0x216c, 0xa764, 0x2c70, 0xa66a, 0x46e, 0x170, 0xa692, 0xa77d, 0x3f7, 0x1e7a, 0x47e, 0xa784, 0x409, 0x15e, 0x1e8a, 0x24c3, 0x1f0f, 0x48e, 0x190, 0xa742, 0x2c19, 0x39c, 0x2c9e, 0x1a0, 0x10a6, 0x429, 0x212b, 0x1eaa, 0xff2f, 0x4ae, 0x533, 0x10b6, 0x13b, 0x49e, 0x23d, 0x24cb, 0x1f3f, 0x4be, 0x41, 0x2c21, 0x543, 0xa74a, 0xc6, 0x1eca, 0x24ce, 0x51, 0x553, 0x1ea2, 0x2cae, 0xa640, 0xd6, 0x1eda, 0x3dc, 0x1f5f, 0x4de, 0x1e0, 0x419, 0x4f2, 0x2c69, 0x216b, 0x1eea, 0x3ec, 0x1f6f, 0x4fc, 0x1e80, 0x2c29, 0xa752, 0x2c7f, 0x17b, 0x1efa, 0x4fe, 0x200, 0x1f2f, 0x102, 0x404, 0x1f89, 0x1e08, 0x556, 0x1f0e, 0x391, 0x210, 0x402, 0x2c08, 0x2c14, 0x1f99, 0x1e18, 0x51a, 0x19d, 0x3a1, 0x220, 0x122, 0x2c24, 0x10a7, 0x1fa9, 0x1e28, 0x206, 0xa72e, 0x230, 0x132, 0x10b7, 0x1fb9, 0x1e38, 0x53a, 0x2cb2, 0x24bf, 0xa73e, 0x1e02, 0x40a, 0xc7, 0x2c60, 0x1fc9, 0x1e48, 0x54a, 0x1cd, 0x4c, 0x24cf, 0xa74e, 0x152, 0x1fd9, 0x1e58, 0x20e, 0xa75e, 0x162, 0x464, 0x1fe9, 0xa668, 0x166, 0xa76e, 0x172, 0xa72c, 0x376, 0x1ff9, 0x1e78, 0x2cbe, 0xa77e, 0x426, 0x182, 0x2c84, 0x386, 0x1f09, 0xa688, 0x1f28, 0x216, 0x2c0f, 0x1f8e, 0x10c4, 0x494, 0x396, 0x1f19, 0x16e, 0x41f, 0x1f9e, 0x1a2, 0x2ca4, 0x3a6, 0xff29, 0x1ea8, 0x24c6, 0x10ac, 0x42f, 0x1fae, 0x1b2, 0x535, 0x4b4, 0xff39, 0x1eb8, 0x23b, 0x1e1e, 0x13d, 0x10bc, 0x545, 0x24c4, 0x47, 0x1f49, 0x1ec8, 0xcc, 0x422, 0x555, 0x2cd4, 0x57, 0x1f59, 0x1ed8, 0x2cce, 0xdc, 0x1e2, 0x4e4, 0x3e6, 0x1f69, 0x1ee8, 0x1e26, 0x216d, 0x2c6f, 0x1f2, 0x4f4, 0xff28, 0xa779, 0x1ef8, 0x17d, 0x2cb4, 0x42a, 0x504, 0x187, 0x2c80, 0x1f08, 0x4d6, 0x10c, 0x1e0e, 0x514, 0x197, 0x4ee, 0x1f18, 0x39b, 0x2c1a, 0x11c, 0xa684, 0x524, 0x1a7, 0x226, 0xa728, 0x3ab, 0x2c2a, 0x10ad, 0x12c, 0x407, 0x1e2e, 0x534, 0x1b7, 0x1e90, 0xff38, 0x2cde, 0x10bd, 0x40b, 0x1e3e, 0x42, 0x4c5, 0x544, 0x1c7, 0x246, 0xa748, 0xcd, 0x14c, 0x1e4e, 0x52, 0xa686, 0x554, 0x1d7, 0xa738, 0xa758, 0xdd, 0x15c, 0x2cc2, 0x1e5e, 0x2cb6, 0x403, 0x2c90, 0x1f68, 0x46a, 0x413, 0x1e6e, 0x370, 0x1f7, 0x1e8, 0x47a, 0x2c0c, 0xa694, 0x2c05, 0xa734, 0x1f88, 0x2c8a, 0xa68e, 0x2c15, 0x1fea, 0x1f98, 0x49a, 0x2c1b, 0x1e9e, 0x3a0, 0xff23, 0x1f9a, 0x425, 0x1fa8, 0xa646, 0x1ac, 0x4b6, 0x1eae, 0xff33, 0x1ef2, 0x1f48, 0x1fb8, 0x4ba, 0x1bc, 0x53f, 0x1ebe, 0x241, 0xc2, 0x147, 0x4a0, 0x19c, 0x1fc8, 0x1e42, 0x24ca, 0x4d, 0x2cba, 0x54f, 0x1ece, 0xd2, 0x1fd8, 0x2cda, 0x1ede, 0x3e0, 0xc3, 0x2167, 0x16c, 0x1fe8, 0x4ea, 0x1ec, 0x1eee, 0x2c75, 0x4a8, 0x1ff8, 0x4fa, 0x42b, 0x1efe, 0x400, 0x1e7e, 0x204, 0x506, 0x189, 0xff2d, 0xa656, 0x1f8d, 0x1e0c, 0x10e, 0x410, 0x502, 0x395, 0x214, 0x516, 0x1f9d, 0x1e1c, 0x2c04, 0x2c20, 0x10a3, 0xff22, 0x3a5, 0x224, 0x2cb0, 0x1a9, 0x1fad, 0x1e2c, 0x12e, 0x1f4b, 0x4a6, 0x10b3, 0xa732, 0x24be, 0x536, 0x24bb, 0xa65e, 0x1e3c, 0x40f, 0x2168, 0x10c3, 0x50a, 0x244, 0x546, 0x50e, 0x48, 0x4cb, 0xa64c, 0x40c, 0x539, 0xd3, 0xa76a, 0x24b8, 0x1d9, 0x58, 0x1e5c, 0x2164, 0x460, 0xa762, 0x2ceb, 0xa666, 0x1e6c, 0x216e, 0x470, 0x112, 0x1e30, 0xa650, 0xa768, 0x1e7c, 0x10c2, 0x414, 0x480, 0xa782, 0x2166, 0x2cc0, 0x2c0b, 0x38a, 0x1f0d, 0x1e8c, 0x18e, 0x490, 0x3a4, 0x2c8e, 0x41b, 0x39a, 0x1f1d, 0x2ca0, 0xff2b, 0x10a8, 0x2c2b, 0x3aa, 0x1f2d, 0x1eac, 0x1ae, 0x531, 0x4b0, 0x472, 0x24c8, 0x139, 0x10b8, 0x1f3d, 0x1ebc, 0x541, 0x24c0, 0x43, 0x24cd, 0xc8, 0x1f4d, 0x1ecc, 0x551, 0x2cd0, 0x53, 0xd8, 0x3da, 0x41c, 0x1edc, 0x1de, 0x4e0, 0x496, 0x4d0, 0x2169, 0x2c6b, 0x3ea, 0x1f6d, 0x1eec, 0x1ee, 0x4f0, 0x179, 0x3fa, 0x2c92, 0x1efc, 0x1fe, 0x500, 0x24e, 0x12a, 0x406, 0x108, 0x20a, 0x1f0c, 0x38f, 0x2c2c, 0x510, 0x193, 0x1e12, 0x4d8, 0x118, 0x21a, 0x1f1c, 0x39f, 0x184, 0x520, 0x2cdc, 0x1e22, 0x2c26, 0x10a9, 0x128, 0x22a, 0xff24, 0x1f2c, 0x512, 0x1b3, 0x2132, 0x10b9, 0x23a, 0x1f3c, 0x4c1, 0x540, 0x48a, 0x2ce0, 0xc9, 0x40d, 0x24a, 0x1f4c, 0x3cf, 0x4e, 0x550, 0x1d3, 0xa652, 0xd9, 0xff2e, 0x1e8e, 0xa75c, 0x196, 0xa662, 0x466, 0x168, 0x42d, 0xa76c, 0x492, 0x476, 0x178, 0x1f3e, 0x3ff, 0x2c01, 0xa682, 0x2c86, 0x1f8c, 0x2c11, 0x1e92, 0x394, 0x2c96, 0x198, 0x2c62, 0x1f9c, 0x421, 0xff32, 0x2c9a, 0x24c7, 0xff27, 0x2ca6, 0x2c1d, 0x1fac, 0x10ae, 0x1eb2, 0xff37, 0xa648, 0x1b8, 0x53b, 0x1fec, 0x1fbc, 0x10be, 0x143, 0x1ec2, 0x245, 0x2cc6, 0x49, 0x1c8, 0x54b, 0x1f6, 0x1fcc, 0xce, 0x1ed2, 0x2cd6, 0x59, 0x2c25, 0xde, 0x2163, 0x1ee2, 0x3e4, 0x4e6, 0xff36, 0x424, 0x552, 0x3f4, 0x4f6, 0x1f8, 0x1ffc, 0x2c06, 0x1e00, 0x2caa, 0x100, 0x389, 0x208, 0x10a, 0x2183, 0x1e10, 0x202, 0xa658, 0x399, 0x218, 0x11a, 0x2c1c, 0x1e54, 0x1e20, 0x522, 0xff26, 0x3a9, 0x228, 0x212a, 0x42c, 0x10af, 0xff3a, 0x532, 0x1b5, 0x24b7, 0xa736, 0x10a2, 0x10bf, 0x1e40, 0x1f2a, 0x542, 0x1c5, 0x44, 0x4c7, 0xa746, 0x248, 0x14a, 0xcf, 0x1e50, 0x2c23, 0x2162, 0x1d5, 0x54, 0xa756, 0x1f2e, 0x15a, 0x2c64, 0x1e60, 0x24ba, 0xa766, 0x2c0a, 0x16a, 0x46c, 0x1e70, 0x212, 0x1e68, 0x3f9, 0x47c, 0xa680, 0x216a, 0x397, 0x2c07, 0xa786, 0x2c16, 0x2c8c, 0x38e, 0xa690, 0x24c2, 0x417, 0x405, 0x1f6e, 0x2c9c, 0x39e, 0xff21, 0x1ea0, 0x10a4, 0x427, 0x4ac, 0xff31, 0x1eb0, 0x1f38, 0x10b4, 0x1ffa, 0x41e, 0x53d, 0x4bc, 0x474, 0x1ec0, 0x243, 0x2cca, 0x145, 0xc4, 0x1ca, 0x54d, 0x24cc, 0x4f, 0x1ed0, 0xd4, 0x4dc, 0x3de, 0x1ee0, 0x2165, 0x2c67, 0x14e, 0x1ea, 0x4ec, 0xa68c, 0x3ee, 0x1ef0, 0x4d2, 0x1fa, 0x1e88, 0x3fe, 0x2c02, 0x1eba, 0x104, 0x1e06, 0x11e, 0xa78b, 0x50c, 0x18f, 0xff2c, 0x393, 0x412, 0x114, 0x1e16, 0x1f9b, 0x42e, 0x51c, 0x19f, 0x21e, 0x3a3, 0x2c22, 0x10a5, 0x124, 0x130, 0x1fab, 0x1af, 0x22e, 0xff30, 0x1e32, 0x10b5, 0x134, 0x1e36, 0x1fbb, 0x24bd, 0x53c, 0x23e, 0xa740, 0x18a, 0xc5, 0x1e46, 0x1fcb, 0x4a, 0x4cd, 0x54c, 0x1cf, 0x48c, 0xa750, 0x2ce2, 0xd5, 0x154, 0x1e56, 0x1fdb, 0x5a, 0x1e4, 0xa760, 0x462, 0x164, 0x1e66, 0x1feb, 0x2ced, 0xa73c, 0x2c72, 0x1f5d, 0x174, 0x1e76, 0x2cb8, 0x1ffb, 0x2c94, 0xc1, 0x2c82, 0x2c17, 0x1e86, 0x388, 0x1f0b, 0x2c0d, 0x2c0e, 0xa642, 0x194, 0xa696, 0x398, 0x1f1b, 0x41d, 0x2ca2, 0x1a4, 0x1ea6, 0x3a8, 0x1f2b, 0x10aa, 0x2c2d, 0x49c, 0x24c9, 0x4b2, 0x2c1f, 0x537, 0x1eb6, 0x1f3b, 0x10ba, 0x13f, 0xa64a, 0x45, 0x1c4, 0x547, 0x1ec6, 0x4c0, 0xca, 0x4da, 0xa74c, 0xa72a, 0x2cd2, 0x55, 0x1ed6, 0x3d8, 0x1f5b, 0xda, 0x1e44, 0x4a4, 0x416, 0xa64e, 0x4e2, 0x2c27, 0x1ee6, 0x3e8, 0x1f6b, 0x2c6d, 0x4aa, 0x216f, 0x1fc, 0x1f29, 0x1e52, 0x1f4, 0x1ef6, 0x2c12, 0xa77b, 0 };
const TChar TTURKISHPRECONVERTER_AUX_TO[] = { 0x253, 0x1e05, 0x2c30, 0x458, 0x1f02, 0x20d, 0x2cad, 0x192, 0x1e15, 0x117, 0x2c48, 0x1f12, 0x3bd, 0x21d, 0x51f, 0x24d6, 0x1e5b, 0x1e25, 0x3c9, 0x2c58, 0x2d20, 0x107, 0x22d, 0x28a, 0x1e35, 0x137, 0x2d1b, 0x1f32, 0x56e, 0x4c4, 0xa645, 0x161, 0x43a, 0xeb, 0x1f42, 0x24d, 0xa65d, 0x57e, 0x1d2, 0x70, 0x1f31, 0x1e63, 0xa655, 0x157, 0xfb, 0xa75b, 0xa781, 0x1e65, 0x2c40, 0x469, 0x1f62, 0x1e4d, 0x2cbd, 0x1f3, 0x373, 0x1e75, 0x177, 0x479, 0x37b, 0x2c33, 0x1e6b, 0x1e85, 0x254, 0x2c89, 0x1f82, 0x1f64, 0x2c43, 0x3b2, 0x1e95, 0x438, 0x2c99, 0x271, 0x159, 0x2cc5, 0x2d00, 0x443, 0xff45, 0x1ea5, 0x280, 0x2ca9, 0x1f83, 0x1fa2, 0x24db, 0x2d10, 0x1e73, 0xff55, 0x1eb5, 0x24d0, 0x2d25, 0x4b9, 0x2d12, 0x1f70, 0x142, 0xe0, 0x1ec5, 0x440, 0x579, 0x2cc9, 0x6b, 0x1f74, 0x2ccd, 0xf0, 0x431, 0xa723, 0x1ed5, 0x2cd9, 0x1f76, 0x2171, 0x1d7d, 0x3e3, 0x1ee5, 0x1e7, 0x4e9, 0x127, 0xa66d, 0x1ef5, 0x448, 0x499, 0x4f9, 0x23f, 0x2d0b, 0xa727, 0x4d5, 0x451, 0xff4a, 0x509, 0x18c, 0x1e0b, 0x1f87, 0x45e, 0x111, 0x1e83, 0x4a3, 0x24df, 0x519, 0x1e1b, 0x1f97, 0x2c4e, 0x2d01, 0x121, 0x223, 0xa725, 0x3c7, 0x1e2b, 0x1fa7, 0x2c5e, 0x2d11, 0x2c39, 0x233, 0xff54, 0x24d3, 0x568, 0x435, 0x1e3b, 0x2d21, 0xa68b, 0xa745, 0x66, 0x4ca, 0x578, 0x1cc, 0x1e4b, 0x3cc, 0xf1, 0x151, 0xa755, 0x76, 0x1dc, 0xa65b, 0xa665, 0x2170, 0xa73b, 0x217c, 0xa765, 0x252, 0xa66b, 0x46f, 0x171, 0xa693, 0x1d79, 0x3f8, 0x1e7b, 0x47f, 0xa785, 0x459, 0x15f, 0x1e8b, 0x24dd, 0x1f07, 0x48f, 0x25b, 0xa743, 0x2c49, 0x3bc, 0x2c9f, 0x1a1, 0x2d06, 0x449, 0xe5, 0x1eab, 0xff4f, 0x4af, 0x563, 0x2d16, 0x13c, 0x49f, 0x19a, 0x24e5, 0x1f37, 0x4bf, 0x61, 0x2c51, 0x573, 0xa74b, 0xe6, 0x1ecb, 0x24e8, 0x71, 0x583, 0x1ea3, 0x2caf, 0xa641, 0xf6, 0x1edb, 0x3dd, 0x1f57, 0x4df, 0x1e1, 0x439, 0x4f3, 0x2c6a, 0x217b, 0x1eeb, 0x3ed, 0x1f67, 0x4fd, 0x1e81, 0x2c59, 0xa753, 0x240, 0x17c, 0x1efb, 0x4ff, 0x201, 0x1f27, 0x103, 0x454, 0x1f81, 0x1e09, 0x586, 0x1f06, 0x3b1, 0x211, 0x452, 0x2c38, 0x2c44, 0x1f91, 0x1e19, 0x51b, 0x272, 0x3c1, 0x19e, 0x123, 0x2c54, 0x2d07, 0x1fa1, 0x1e29, 0x207, 0xa72f, 0x231, 0x133, 0x2d17, 0x1fb1, 0x1e39, 0x56a, 0x2cb3, 0x24d9, 0xa73f, 0x1e03, 0x45a, 0xe7, 0x2c61, 0x1f73, 0x1e49, 0x57a, 0x1ce, 0x6c, 0x24e9, 0xa74f, 0x153, 0x1fd1, 0x1e59, 0x20f, 0xa75f, 0x163, 0x465, 0x1fe1, 0xa669, 0x167, 0xa76f, 0x173, 0xa72d, 0x377, 0x1f79, 0x1e79, 0x2cbf, 0xa77f, 0x446, 0x183, 0x2c85, 0x3ac, 0x1f01, 0xa689, 0x1f20, 0x217, 0x2c3f, 0x1f86, 0x2d24, 0x495, 0x3b6, 0x1f11, 0x16f, 0x43f, 0x1f96, 0x1a3, 0x2ca5, 0x3c6, 0xff49, 0x1ea9, 0x24e0, 0x2d0c, 0x44f, 0x1fa6, 0x28b, 0x565, 0x4b5, 0xff59, 0x1eb9, 0x23c, 0x1e1f, 0x13e, 0x2d1c, 0x575, 0x24de, 0x67, 0x1f41, 0x1ec9, 0xec, 0x442, 0x585, 0x2cd5, 0x77, 0x1f51, 0x1ed9, 0x2ccf, 0xfc, 0x1e3, 0x4e5, 0x3e7, 0x1f61, 0x1ee9, 0x1e27, 0x217d, 0x250, 0x1f3, 0x4f5, 0xff48, 0xa77a, 0x1ef9, 0x17e, 0x2cb5, 0x44a, 0x505, 0x188, 0x2c81, 0x1f00, 0x4d7, 0x10d, 0x1e0f, 0x515, 0x268, 0x4ef, 0x1f10, 0x3bb, 0x2c4a, 0x11d, 0xa685, 0x525, 0x1a8, 0x227, 0xa729, 0x3cb, 0x2c5a, 0x2d0d, 0x12d, 0x457, 0x1e2f, 0x564, 0x292, 0x1e91, 0xff58, 0x2cdf, 0x2d1d, 0x45b, 0x1e3f, 0x62, 0x4c6, 0x574, 0x1c9, 0x247, 0xa749, 0xed, 0x14d, 0x1e4f, 0x72, 0xa687, 0x584, 0x1d8, 0xa739, 0xa759, 0xfd, 0x15d, 0x2cc3, 0x1e5f, 0x2cb7, 0x453, 0x2c91, 0x1f60, 0x46b, 0x433, 0x1e6f, 0x371, 0x1bf, 0x1e9, 0x47b, 0x2c3c, 0xa695, 0x2c35, 0xa735, 0x1f80, 0x2c8b, 0xa68f, 0x2c45, 0x1f7a, 0x1f90, 0x49b, 0x2c4b, 0xdf, 0x3c0, 0xff43, 0x1f92, 0x445, 0x1fa0, 0xa647, 0x1ad, 0x4b7, 0x1eaf, 0xff53, 0x1ef3, 0x1f40, 0x1fb0, 0x4bb, 0x1bd, 0x56f, 0x1ebf, 0x242, 0xe2, 0x148, 0x4a1, 0x26f, 0x1f72, 0x1e43, 0x24e4, 0x6d, 0x2cbb, 0x57f, 0x1ecf, 0xf2, 0x1fd0, 0x2cdb, 0x1edf, 0x3e1, 0xe3, 0x2177, 0x16d, 0x1fe0, 0x4eb, 0x1ed, 0x1eef, 0x2c76, 0x4a9, 0x1f78, 0x4fb, 0x44b, 0x1eff, 0x450, 0x1e7f, 0x205, 0x507, 0x256, 0xff4d, 0xa657, 0x1f85, 0x1e0d, 0x10f, 0x430, 0x503, 0x3b5, 0x215, 0x517, 0x1f95, 0x1e1d, 0x2c34, 0x2c50, 0x2d03, 0xff42, 0x3c5, 0x225, 0x2cb1, 0x283, 0x1fa5, 0x1e2d, 0x12f, 0x1f43, 0x4a7, 0x2d13, 0xa733, 0x24d8, 0x566, 0x24d5, 0xa65f, 0x1e3d, 0x45f, 0x2178, 0x2d23, 0x50b, 0x289, 0x576, 0x50f, 0x68, 0x4cc, 0xa64d, 0x45c, 0x569, 0xf3, 0xa76b, 0x24d2, 0x1da, 0x78, 0x1e5d, 0x2174, 0x461, 0xa763, 0x2cec, 0xa667, 0x1e6d, 0x217e, 0x471, 0x113, 0x1e31, 0xa651, 0xa769, 0x1e7d, 0x2d22, 0x434, 0x481, 0xa783, 0x2176, 0x2cc1, 0x2c3b, 0x3af, 0x1f05, 0x1e8d, 0x1dd, 0x491, 0x3c4, 0x2c8f, 0x43b, 0x3ba, 0x1f15, 0x2ca1, 0xff4b, 0x2d08, 0x2c5b, 0x3ca, 0x1f25, 0x1ead, 0x288, 0x561, 0x4b1, 0x473, 0x24e2, 0x13a, 0x2d18, 0x1f35, 0x1ebd, 0x571, 0x24da, 0x63, 0x24e7, 0xe8, 0x1f45, 0x1ecd, 0x581, 0x2cd1, 0x73, 0xf8, 0x3db, 0x43c, 0x1edd, 0x1df, 0x4e1, 0x497, 0x4d1, 0x2179, 0x2c6c, 0x3eb, 0x1f65, 0x1eed, 0x1ef, 0x4f1, 0x17a, 0x3fb, 0x2c93, 0x1efd, 0x1ff, 0x501, 0x24f, 0x12b, 0x456, 0x109, 0x20b, 0x1f04, 0x3ce, 0x2c5c, 0x511, 0x260, 0x1e13, 0x4d9, 0x119, 0x21b, 0x1f14, 0x3bf, 0x185, 0x521, 0x2cdd, 0x1e23, 0x2c56, 0x2d09, 0x129, 0x22b, 0xff44, 0x1f24, 0x513, 0x1b4, 0x214e, 0x2d19, 0x2c65, 0x1f34, 0x4c2, 0x570, 0x48b, 0x2ce1, 0xe9, 0x45d, 0x24b, 0x1f44, 0x3d7, 0x6e, 0x580, 0x1d4, 0xa653, 0xf9, 0xff4e, 0x1e8f, 0xa75d, 0x269, 0xa663, 0x467, 0x169, 0x44d, 0xa76d, 0x493, 0x477, 0xff, 0x1f36, 0x37d, 0x2c31, 0xa683, 0x2c87, 0x1f84, 0x2c41, 0x1e93, 0x3b4, 0x2c97, 0x199, 0x26b, 0x1f94, 0x441, 0xff52, 0x2c9b, 0x24e1, 0xff47, 0x2ca7, 0x2c4d, 0x1fa4, 0x2d0e, 0x1eb3, 0xff57, 0xa649, 0x1b9, 0x56b, 0x1fe5, 0x1fb3, 0x2d1e, 0x144, 0x1ec3, 0x28c, 0x2cc7, 0x131, 0x1c9, 0x57b, 0x195, 0x1fc3, 0xee, 0x1ed3, 0x2cd7, 0x79, 0x2c55, 0xfe, 0x2173, 0x1ee3, 0x3e5, 0x4e7, 0xff56, 0x444, 0x582, 0x3b8, 0x4f7, 0x1f9, 0x1ff3, 0x2c36, 0x1e01, 0x2cab, 0x101, 0x3ae, 0x209, 0x10b, 0x2184, 0x1e11, 0x203, 0xa659, 0x3b9, 0x219, 0x11b, 0x2c4c, 0x1e55, 0x1e21, 0x523, 0xff46, 0x3c9, 0x229, 0x6b, 0x44c, 0x2d0f, 0xff5a, 0x562, 0x1b6, 0x24d1, 0xa737, 0x2d02, 0x2d1f, 0x1e41, 0x1f22, 0x572, 0x1c6, 0x64, 0x4c8, 0xa747, 0x249, 0x14b, 0xef, 0x1e51, 0x2c53, 0x2172, 0x1d6, 0x74, 0xa757, 0x1f26, 0x15b, 0x27d, 0x1e61, 0x24d4, 0xa767, 0x2c3a, 0x16b, 0x46d, 0x1e71, 0x213, 0x1e69, 0x3f2, 0x47d, 0xa681, 0x217a, 0x3b7, 0x2c37, 0xa787, 0x2c46, 0x2c8d, 0x3cd, 0xa691, 0x24dc, 0x437, 0x455, 0x1f66, 0x2c9d, 0x3be, 0xff41, 0x1ea1, 0x2d04, 0x447, 0x4ad, 0xff51, 0x1eb1, 0x1f30, 0x2d14, 0x1f7c, 0x43e, 0x56d, 0x4bd, 0x475, 0x1ec1, 0x180, 0x2ccb, 0x146, 0xe4, 0x1cc, 0x57d, 0x24e6, 0x6f, 0x1ed1, 0xf4, 0x4dd, 0x3df, 0x1ee1, 0x2175, 0x2c68, 0x14f, 0x1eb, 0x4ed, 0xa68d, 0x3ef, 0x1ef1, 0x4d3, 0x1fb, 0x1e89, 0x37c, 0x2c32, 0x1ebb, 0x105, 0x1e07, 0x11f, 0xa78c, 0x50d, 0x259, 0xff4c, 0x3b3, 0x432, 0x115, 0x1e17, 0x1f93, 0x44e, 0x51d, 0x275, 0x21f, 0x3c3, 0x2c52, 0x2d05, 0x125, 0x69, 0x1fa3, 0x1b0, 0x22f, 0xff50, 0x1e33, 0x2d15, 0x135, 0x1e37, 0x1f71, 0x24d7, 0x56c, 0x2c66, 0xa741, 0x257, 0xe5, 0x1e47, 0x1f75, 0x6a, 0x4ce, 0x57c, 0x1d0, 0x48d, 0xa751, 0x2ce3, 0xf5, 0x155, 0x1e57, 0x1f77, 0x7a, 0x1e5, 0xa761, 0x463, 0x165, 0x1e67, 0x1f7b, 0x2cee, 0xa73d, 0x2c73, 0x1f55, 0x175, 0x1e77, 0x2cb9, 0x1f7d, 0x2c95, 0xe1, 0x2c83, 0x2c47, 0x1e87, 0x3ad, 0x1f03, 0x2c3d, 0x2c3e, 0xa643, 0x263, 0xa697, 0x3b8, 0x1f13, 0x43d, 0x2ca3, 0x1a5, 0x1ea7, 0x3c8, 0x1f23, 0x2d0a, 0x2c5d, 0x49d, 0x24e3, 0x4b3, 0x2c4f, 0x567, 0x1eb7, 0x1f33, 0x2d1a, 0x140, 0xa64b, 0x65, 0x1c6, 0x577, 0x1ec7, 0x4cf, 0xea, 0x4db, 0xa74d, 0xa72b, 0x2cd3, 0x75, 0x1ed7, 0x3d9, 0x1f53, 0xfa, 0x1e45, 0x4a5, 0x436, 0xa64f, 0x4e3, 0x2c57, 0x1ee7, 0x3e9, 0x1f63, 0x251, 0x4ab, 0x217f, 0x1fd, 0x1f21, 0x1e53, 0x1f5, 0x1ef7, 0x2c42, 0xa77c, 0 };
struct TTurkishPreConverter: public TTr {
    TTurkishPreConverter()
        : TTr(TTURKISHPRECONVERTER_AUX_FROM, TTURKISHPRECONVERTER_AUX_TO, NULL, NULL, NULL)
    {}
};
const TChar TTURKISHCONVERTER_AUX_FROM[] = { 0xe2, 0xee, 0xc2, 0xfb, 0xce, 0xdb, 0 };
const TChar TTURKISHCONVERTER_AUX_TO[] = { 0x61, 0x69, 0x41, 0x75, 0x49, 0x55, 0 };
const TChar TTURKISHCONVERTER_AUX_KILL[] = { 0x2019, 0x27, 0 };
struct TTurkishConverter: public TTr {
    TTurkishConverter()
        : TTr(TTURKISHCONVERTER_AUX_FROM, TTURKISHCONVERTER_AUX_TO, TTURKISHCONVERTER_AUX_KILL, NULL, NULL)
    {}
};
const TChar TTURKISHDIACRITICSMAP_AUX_0[] = { 0x63, 0xe7, 0 };
const TChar TTURKISHDIACRITICSMAP_AUX_1[] = { 0x67, 0x11f, 0 };
const TChar TTURKISHDIACRITICSMAP_AUX_2[] = { 0x69, 0x131, 0 };
const TChar TTURKISHDIACRITICSMAP_AUX_3[] = { 0x6f, 0xf6, 0 };
const TChar TTURKISHDIACRITICSMAP_AUX_4[] = { 0x73, 0x15f, 0 };
const TChar TTURKISHDIACRITICSMAP_AUX_5[] = { 0x75, 0xfc, 0 };
class TTurkishDiacriticsMap: public TDiacriticsMap {
public:
    TTurkishDiacriticsMap() {
        Add(TTURKISHDIACRITICSMAP_AUX_0);
Add(TTURKISHDIACRITICSMAP_AUX_1);
Add(TTURKISHDIACRITICSMAP_AUX_2);
Add(TTURKISHDIACRITICSMAP_AUX_3);
Add(TTURKISHDIACRITICSMAP_AUX_4);
Add(TTURKISHDIACRITICSMAP_AUX_5);

    }
};
const TChar UKR_REQUIRED_ALPHA[] = { 0x410, 0x415, 0x418, 0x41e, 0x423, 0x42e, 0x42f, 0x404, 0x406, 0x407, 0x430, 0x435, 0x438, 0x43e, 0x443, 0x44e, 0x44f, 0x454, 0x456, 0x457, 0 };
const TChar UKR_NORMAL_ALPHA[] = { 0x411, 0x412, 0x413, 0x414, 0x416, 0x417, 0x419, 0x41a, 0x41b, 0x41c, 0x41d, 0x41f, 0x420, 0x421, 0x422, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42c, 0x490, 0x431, 0x432, 0x433, 0x434, 0x436, 0x437, 0x439, 0x43a, 0x43b, 0x43c, 0x43d, 0x43f, 0x440, 0x441, 0x442, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44c, 0x491, 0 };
const TChar UKR_ALIEN_ALPHA[] = { 0x41, 0x42, 0x43, 0x45, 0x48, 0x49, 0x4b, 0x4d, 0x4f, 0x50, 0x61, 0x63, 0x65, 0x67, 0x69, 0x6b, 0x6e, 0x6f, 0x70, 0x54, 0x58, 0x59, 0x75, 0x78, 0x79, 0x401, 0x451, 0 };
